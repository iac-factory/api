{
    "openapi" : "3.1.1",
    "info" : {
        "title" : "Cloud-ASGI",
        "version" : "0.4.346"
    },
    "paths" : {
        "/Health" : {
            "get" : {
                "tags" : [ "General" ],
                "summary" : "Health",
                "description" : "# Health-Check #\n\nThe `ASGI` Web-Application will return a JSON, 200 Response upon\nInitialization.\n\n## References ##\n- [Cloud-Technology.IO](https://cloud-technology.io)",
                "operationId" : "Health_Health_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Health"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Company/All" : {
            "get" : {
                "tags" : [ "Business", "Company" ],
                "summary" : "Query All Company Records",
                "description" : "... ",
                "operationId" : "Query_all_Company_Records_API_Company_All_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string"
                    },
                    "name" : "Name",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Type",
                        "type" : "string"
                    },
                    "name" : "Type",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Company Records Api Company All Get",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                                    }, {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                                        }
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Company/Industry/Types" : {
            "get" : {
                "tags" : [ "Business", "Company" ],
                "summary" : "Query Business Industry Types",
                "description" : "... ",
                "operationId" : "Query_Business_Industry_Types_API_Company_Industry_Types_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "Default"
                    },
                    "name" : "Industry",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Business Industry Types Api Company Industry Types Get",
                                    "type" : "array",
                                    "items" : { }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Company" : {
            "post" : {
                "tags" : [ "Business", "Company" ],
                "summary" : "Create A Company Table-Entry",
                "description" : "... ",
                "operationId" : "Create_a_Company_Table_Entry_API_Company_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Create"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Company/Business-Unit" : {
            "post" : {
                "tags" : [ "Business", "Company" ],
                "summary" : "Create A Company Table-Entry With Business-Unit Array",
                "description" : "*Creates both `Company` **and** `Business-Unit` Table Entries*.",
                "operationId" : "Create_a_Company_Table_Entry_with_Business_Unit_Array_API_Company_Business_Unit_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Company",
                        "type" : "string",
                        "default" : "[Company-Name]"
                    },
                    "name" : "Company",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "[Industry]"
                    },
                    "name" : "Type",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Website",
                        "type" : "string",
                        "default" : "[URL]"
                    },
                    "name" : "Website",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Unit",
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        }
                    },
                    "name" : "Unit",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Record"
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Unit" : {
            "get" : {
                "tags" : [ "Business", "Unit" ],
                "summary" : "Query Business-Unit Records",
                "description" : "Create an ... Record ",
                "operationId" : "Query_Business_Unit_Records_API_Unit_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string"
                    },
                    "name" : "Name",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Company",
                        "type" : "string"
                    },
                    "name" : "Company",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Business Unit Records Api Unit Get",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                                    }, {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                                        }
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            },
            "post" : {
                "tags" : [ "Business", "Unit" ],
                "summary" : "Create A Business-Unit Table-Entry",
                "description" : "Create a variable amount of Business-Unit Record(s) ",
                "operationId" : "Create_a_Business_Unit_Table_Entry_API_Unit_post",
                "parameters" : [ {
                    "description" : "Business Unit Name",
                    "required" : false,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string",
                        "description" : "Business Unit Name"
                    },
                    "name" : "Name",
                    "in" : "query"
                }, {
                    "description" : "Company Query (Search) Type",
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Index"
                        } ],
                        "description" : "Company Query (Search) Type",
                        "default" : "Name"
                    },
                    "name" : "Key",
                    "in" : "query"
                }, {
                    "description" : "Company UUID or Name",
                    "required" : false,
                    "schema" : {
                        "title" : "Value",
                        "type" : "string",
                        "description" : "Company UUID or Name"
                    },
                    "name" : "Value",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Unit/Search" : {
            "get" : {
                "tags" : [ "Business", "Unit" ],
                "summary" : "Query Specific Business-Unit Records",
                "description" : "Create an ... Record ",
                "operationId" : "Query_Specific_Business_Unit_Records_API_Unit_Search_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string"
                    },
                    "name" : "Name",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Company",
                        "type" : "string"
                    },
                    "name" : "Company",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Specific Business Unit Records Api Unit Search Get",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Association"
                                    }, {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Association"
                                        }
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "deprecated" : true
            }
        },
        "/API/Unit/All" : {
            "get" : {
                "tags" : [ "Business", "Unit" ],
                "summary" : "Query All Business-Unit Records",
                "description" : "Create an ... Record ",
                "operationId" : "Query_all_Business_Unit_Records_API_Unit_All_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string"
                    },
                    "name" : "Name",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Business Unit Records Api Unit All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Association"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "deprecated" : true
            }
        },
        "/API/Authentication/Bearer" : {
            "post" : {
                "tags" : [ "Authentication" ],
                "summary" : "Jwt-Bearer-Authentication",
                "description" : "Asynchronous API-Endpoint, callable via a `JWT` JSON Body.\n\n    Parent:\n        - `Database.ASGI.Authentication.Interface`\n\n    Arguments:\n        - `Password` (String): `User.Password`, Raw Value.\n        - `Salt` (String): `User.Salt`, Raw Value.\n        - `Token` (String): `User.Token`, Raw Value.\n\n    Attributes:\n        - `Password` (Secret): `User.Password`, Sanitized Value.\n        - `Salt` (Secret): `User.Salt`, Sanitized Value.\n        - `Token` (Secret): `User.Token`, Sanitized Value.\n\n    Return:\n        - `Database.User.Schemas.Nexus.Sanitation`",
                "operationId" : "JWT_Bearer_Authentication_API_Authentication_Bearer_post",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Token",
                        "type" : "string"
                    },
                    "name" : "Token",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created"
                    },
                    "202" : {
                        "description" : "Accepted"
                    },
                    "400" : {
                        "description" : "Bad Request"
                    },
                    "401" : {
                        "description" : "Unauthorized"
                    },
                    "404" : {
                        "description" : "Not Found"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity"
                    }
                }
            }
        },
        "/API/Authentication/Session" : {
            "get" : {
                "tags" : [ "Authentication" ],
                "summary" : "Session",
                "description" : "...",
                "operationId" : "Session_API_Authentication_Session_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Authentication/Account" : {
            "get" : {
                "tags" : [ "Authentication" ],
                "summary" : "Account",
                "description" : "## Debugging ##\n\n### Session Resolution + ORM Lazy Loading ###\n\n> *`Parent instance [...] is not bound to a Session`* - [**Official Documentation**](https://docs.sqlalchemy.org/en/13/errors.html#parent-instance-x-is-not-bound-to-a-session-lazy-load-deferred-load-refresh-etc-operation-cannot-proceed)\n\n-   The most common error message when dealing with the ORM, and it occurs as a\n\n    result of the nature of a technique the ORM makes wide use of known as lazy\n\n    loading.\n\n-   Lazy loading is a common object-relational pattern whereby an object that’s\n\n    persisted.\n    by the ORM maintains a proxy to the database itself, such that when various\n\n    attributes upon the object are accessed, their value may be retrieved from the\n\n    database lazily. The advantage to this approach is that objects can be retrieved\n\n    from the database without having to load all of their attributes or related data\n\n    at once, and instead only that data which is requested can be delivered at that\n\n    time.\n\n-   The major disadvantage is basically a mirror image of the advantage, which\n\n    is that if lots of objects are being loaded which are known to require a certain\n\n    set of data in all cases, it is wasteful to load that additional data piecemeal.",
                "operationId" : "Account_API_Authentication_Account_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                                }
                            }
                        }
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Authentication/Token" : {
            "post" : {
                "tags" : [ "Authentication" ],
                "summary" : "Jwt",
                "operationId" : "JWT_API_Authentication_Token_post",
                "requestBody" : {
                    "content" : {
                        "application/x-www-form-urlencoded" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Body_JWT_API_Authentication_Token_post"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/User" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query All Application Users",
                "description" : "... ",
                "operationId" : "Query_ALl_Application_Users_API_User_get",
                "parameters" : [ {
                    "description" : "User-ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "User-ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "description" : "Alias",
                    "required" : false,
                    "schema" : {
                        "title" : "Username",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Alias"
                    },
                    "name" : "Username",
                    "in" : "query"
                }, {
                    "description" : "Address",
                    "required" : false,
                    "schema" : {
                        "title" : "Email",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "email"
                        } ],
                        "description" : "Address"
                    },
                    "name" : "Email",
                    "in" : "query"
                }, {
                    "description" : "0",
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "description" : "0",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "description" : "100",
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "description" : "100",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Application Users Api User Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            },
            "post" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Create A Complete User Record",
                "description" : "# Users - Provisioning #\n\n*Create an Application, API User Database Record.*\n\n**Data is `POST`'ed via JSON-Serialized Input.**\n\nAttributes:\n- `Username`: Primary Account Name, Unique\n\n- `Email-Address`: Associated Account's Registration Email Address\n\n- `Preferred-Name`: Nickname, Display-Name\n\n- `Active`: Account Status\n\n- `Gender-Code`: Gender Identity via ISO International Standard Code(s)\n\n- `Password`: Pepper + Salted, Hashed Account Sign-In String\n\n\nObject Types:\n- `Name`: ***Account, User Full-Name***. Properties:\n\n    - `First` (String)\n\n    - `Middle` (String)\n\n    - `Last` (String)\n\n- `Verification`: ***User's Account Verification Status***. Properties:\n\n    - `Verified`: (Boolean)\n\n- `Company`: ***User's Associated Company Login***. Properties:\n\n    - `Name`: (String), **Unique**\n\n    - `Type`: (String), **Unique**, Enumeration of [`Medical`, `Construction`, `Entertainment`, `Transportation`, `Security`, `Consulting`, `Hospitality`, `Automobile`, `Estate`, `Finance`, `Insurance`, `Oil`, `Mining`, `Energy`, `Engineering`, `Electronics`, `Legal`, `Telecommunications`, `Retail`, `Education`, `Storage`, `Textiles`, `Agriculture`, `Manufacturing`, `Gaming`].\n\n    - `Website`: (HTTP(s), String), **Unique**\n\n    - `Name`: (String), **Unique**\n\n- `Unit`: (String)\n\n- `Note`: ...",
                "operationId" : "Create_a_Complete_User_Record_API_User_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__JSON"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Search" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Application Users",
                "description" : "... ",
                "operationId" : "Query_Application_Users_API_User_Search_get",
                "parameters" : [ {
                    "description" : "ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "description" : "Username",
                    "required" : false,
                    "schema" : {
                        "title" : "Username",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Username"
                    },
                    "name" : "Username",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Email",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "email"
                        } ]
                    },
                    "name" : "Email",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Application Users Api User Search Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Single Application User",
                "description" : "... ",
                "operationId" : "Query_a_Single_Application_User_API_User_Account_get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Shard" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Sharded, Simplified Application User",
                "description" : "... ",
                "operationId" : "Query_a_Sharded__Simplified_Application_User_API_User_Account_Shard_get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/ID" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Single Application User.Id",
                "description" : "... ",
                "operationId" : "Query_a_Single_Application_User_ID_API_User_ID_get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                                },
                                "example" : "6F22DA52-B6BB-4538-9D61-9A3E936CBB5A"
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Notes" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Nexus User-Note Records",
                "description" : "... ",
                "operationId" : "Query_Nexus_User_Note_Records_API_User_Account_Notes_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Name" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Nexus User-Name Records",
                "description" : "... ",
                "operationId" : "Query_Nexus_User_Name_Records_API_User_Account_Name_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Verification" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Nexus-User Verification Status",
                "description" : "... ",
                "operationId" : "Query_a_Nexus_User_Verification_Status_API_User_Account_Verification_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Verification__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Company" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Nexus-User Company",
                "description" : "... ",
                "operationId" : "Query_a_Nexus_User_Company_API_User_Account_Company_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Shard"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Unit" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Nexus-User Business Unit",
                "description" : "...",
                "operationId" : "Query_a_Nexus_User_Business_Unit_API_User_Account_Unit_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query A Nexus User Business Unit Api User Account Unit Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Account/Units" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query A Nexus User, Company Business-Units",
                "description" : "...",
                "operationId" : "Query_a_Nexus_User__Company_Business_Units_API_User_Account_Units_get",
                "parameters" : [ {
                    "description" : "Application (Nexus) User",
                    "required" : true,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string",
                        "description" : "Application (Nexus) User"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query A Nexus User  Company Business Units Api User Account Units Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Update/" : {
            "put" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Update A  User Record",
                "description" : "# [Nexus] User Record Update(s) #\n\n> ***Update an Established Database User Record***\n\nOne of three *Unique* keys must be provided in order to locate any\ngiven, single record:\n\n- `ID` -- **User.ID**, `UUID`\n\n- `Username` -- **User.Username**, `String`\n\n- `Email` -- **User.Email**, `String`\n\n*Any and All* Unique keys can be provided; however, in exception to `ID`,\nif either Email or Username are established in addition to other Unique\nkeys, they may be over-written if they differ from the record's\nprevious content.\n\nValue(s) intentionally unset will ***not*** get updated.\n\n## User API Token ##\n\n*Note* - When Updating a User's `Token`, simply set to `True` to programatically\ngenerate a new `Token`. Manual overrides are not allowed and such is\nintentionally limited to `True`, `False`, or `NULL`.\n\n## Gender Codes ##\n\n> *Please see [ISO5218 Gender Codes](https://en.wikipedia.org/wiki/ISO/IEC_5218) for more\n> information.*\n\n- Empty:    `0x0`\n\n- Male:     `0x1`\n\n- Female:   `0x2`\n\n- Other:    `0x9`",
                "operationId" : "Update_a__User_Record_API_User_Update__put",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "string"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string"
                    },
                    "name" : "Username",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Email",
                        "type" : "string"
                    },
                    "name" : "Email",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Active",
                        "type" : "boolean"
                    },
                    "name" : "Active",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Password",
                        "type" : "string"
                    },
                    "name" : "Password",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "$ref" : "#/components/schemas/Database__User__Imports__ISO5218"
                    },
                    "name" : "Gender",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Verify" : {
            "put" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Verify An Established User",
                "description" : "... ",
                "operationId" : "Verify_an_Established_User_API_User_Verify_put",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Data",
                        "type" : "boolean"
                    },
                    "name" : "Data",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Verification__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Delete" : {
            "delete" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Decommission A User Via Unique Key",
                "description" : "Identifier can be a **User** Record's `ID`, `Username`, or `Email` Attribute.",
                "operationId" : "Decommission_a_User_via_Unique_Key_API_User_Delete_delete",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Email",
                        "type" : "string"
                    },
                    "name" : "Email",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Username",
                        "type" : "string"
                    },
                    "name" : "Username",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Delete"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/User/Gender/ISO" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Standardized Iso Gender Codes",
                "description" : "... ",
                "operationId" : "Query_Standardized_ISO_Gender_Codes_API_User_Gender_ISO_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "$ref" : "#/components/schemas/Database__User__Imports__ISO5218"
                    },
                    "name" : "Code",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Standardized Iso Gender Codes Api User Gender Iso Get",
                                    "type" : "array",
                                    "items" : { }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Gender/ISO/Value" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Standardized Iso Gender Code Values",
                "description" : "... ",
                "operationId" : "Query_Standardized_ISO_Gender_Code_Values_API_User_Gender_ISO_Value_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "$ref" : "#/components/schemas/Database__User__Imports__ISO5218"
                    },
                    "name" : "Code",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Standardized Iso Gender Code Values Api User Gender Iso Value Get",
                                    "type" : "array",
                                    "items" : { }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Gender/Type" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Standardized Iso Gender Codes",
                "description" : "... ",
                "operationId" : "Query_Standardized_ISO_Gender_Codes_API_User_Gender_Type_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "$ref" : "#/components/schemas/Gender"
                    },
                    "name" : "Code",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Standardized Iso Gender Codes Api User Gender Type Get",
                                    "type" : "array",
                                    "items" : { }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Gender/Type/Value" : {
            "get" : {
                "tags" : [ "User-Management", "Nexus" ],
                "summary" : "Query Standardized Iso Gender Codes",
                "description" : "... ",
                "operationId" : "Query_Standardized_ISO_Gender_Codes_API_User_Gender_Type_Value_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "$ref" : "#/components/schemas/Gender"
                    },
                    "name" : "Code",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Standardized Iso Gender Codes Api User Gender Type Value Get",
                                    "type" : "array",
                                    "items" : { }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Discord" : {
            "post" : {
                "tags" : [ "Discord", "User-Management" ],
                "summary" : "Create A Discord User",
                "description" : "...  ",
                "operationId" : "Create_a_Discord_User_API_Discord_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "type" : "string"
                    },
                    "name" : "User",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Json",
                        "type" : "string"
                    },
                    "name" : "JSON",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Body_Create_a_Discord_User_API_Discord_post"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Discord__Schemas__User__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE" : {
            "get" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Query Scrum Submissions",
                "description" : "...  ",
                "operationId" : "Query_SCRUM_Submissions_API_AGILE_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Discord",
                        "type" : "string"
                    },
                    "name" : "Discord",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Unit",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "Unit",
                    "in" : "query"
                }, {
                    "description" : "Integer from Range [1 ... 54]",
                    "required" : false,
                    "schema" : {
                        "title" : "Week",
                        "type" : "integer",
                        "description" : "Integer from Range [1 ... 54]"
                    },
                    "name" : "Week",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Scrum Submissions Api Agile Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "deprecated" : true
            }
        },
        "/API/AGILE/Base" : {
            "get" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Query Base Scrum Submissions",
                "description" : "...  ",
                "operationId" : "Query_Base_SCRUM_Submissions_API_AGILE_Base_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Unit",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "Unit",
                    "in" : "query"
                }, {
                    "description" : "Integer from Range [1 ... 54]",
                    "required" : false,
                    "schema" : {
                        "title" : "Week",
                        "type" : "integer",
                        "description" : "Integer from Range [1 ... 54]"
                    },
                    "name" : "Week",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Base Scrum Submissions Api Agile Base Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__JSON"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "deprecated" : true
            }
        },
        "/API/AGILE/Scrum" : {
            "post" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Publish A Weekly Scrum Submission",
                "description" : "...  ",
                "operationId" : "Publish_a_Weekly_SCRUM_Submission_API_AGILE_Scrum_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__JSON"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE/Scrum/Create" : {
            "post" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Publish A Weekly Scrum Submission",
                "description" : "...  ",
                "operationId" : "Publish_a_Weekly_SCRUM_Submission_API_AGILE_Scrum_Create_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__JSON"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE/Scrum/Read" : {
            "get" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Query Sharded Scrum Submissions",
                "description" : "...\n\nExample HTTP API Request:\n\n```bash\nexport URL=\"http://localhost:3000/API/AGILE/Scrum/Read\"\nexport ID=\"6aa2821c-8898-4afe-aa8c-4fe8f336d97b\"\n\ncurl -X 'GET' \"${URL}?ID=${ID}\" \\\n    --header \"accept: application/json\"\n```",
                "operationId" : "Query_Sharded_SCRUM_Submissions_API_AGILE_Scrum_Read_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Unit",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "Unit",
                    "in" : "query"
                }, {
                    "description" : "Integer from Range [1 ... 54]",
                    "required" : false,
                    "schema" : {
                        "title" : "Week",
                        "type" : "integer",
                        "description" : "Integer from Range [1 ... 54]"
                    },
                    "name" : "Week",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Sharded Scrum Submissions Api Agile Scrum Read Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Shard"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Shard"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE/Scrum/Update" : {
            "put" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Publish A Weekly Scrum Submission",
                "description" : "...\n\nExample HTTP API Request:\n\n```bash\nexport URL=\"http://localhost:3000/API/AGILE/Scrum/Update?ID=6aa2821c-8898-4afe-aa8c-4fe8f336d97b\"\n\ncurl -X \"PUT\" \"${URL}\" \\\n    --header \"accept: application/json\" \\\n    --header \"Content-Type: application/json\" \\\n    --data '{\n        \"UID\": \"string\",\n        \"Synopsis\": \"string\",\n        \"Projection\": \"string\",\n        \"Complication\": \"string\",\n        \"Note\": {\n            \"Content\": \"...\",\n            \"Internal\": false\n        },\n        \"Day\": 6,\n        \"Week\": 10,\n        \"Year\": 2021\n    }'\n```",
                "operationId" : "Publish_a_Weekly_SCRUM_Submission_API_AGILE_Scrum_Update_put",
                "parameters" : [ {
                    "description" : "Unique Record Identifier",
                    "required" : false,
                    "schema" : {
                        "title" : "Record-ID",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "integer"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ],
                        "description" : "Unique Record Identifier"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__JSON"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__AGILE__Schemas__Synopsis__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE/Scrum/Delete" : {
            "delete" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Delete A Scrum Submission",
                "description" : "...  ",
                "operationId" : "Delete_a_SCRUM_Submission_API_AGILE_Scrum_Delete_delete",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/AGILE/Total" : {
            "get" : {
                "tags" : [ "AGILE", "Synopsis" ],
                "summary" : "Query Total Scrum Submissions",
                "description" : "...  ",
                "operationId" : "Query_Total_SCRUM_Submissions_API_AGILE_Total_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Discord",
                        "type" : "string"
                    },
                    "name" : "Discord",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Unit",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "Unit",
                    "in" : "query"
                }, {
                    "description" : "Integer from Range [1 ... 54]",
                    "required" : false,
                    "schema" : {
                        "title" : "Week",
                        "type" : "integer",
                        "description" : "Integer from Range [1 ... 54]"
                    },
                    "name" : "Week",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Count"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CMS/General/All" : {
            "get" : {
                "tags" : [ "Content-Management" ],
                "summary" : "Query All Cms-General Records",
                "operationId" : "Query_all_CMS_General_records_API_CMS_General_All_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Cms General Records Api Cms General All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CMS/General/Create" : {
            "post" : {
                "tags" : [ "Content-Management" ],
                "summary" : "Create A Cms-General Record",
                "operationId" : "Create_a_CMS_General_record_API_CMS_General_Create_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Create"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CMS/General/Search" : {
            "get" : {
                "tags" : [ "Content-Management" ],
                "summary" : "Query Specific Cms-General Record(S)",
                "operationId" : "Query_specific_CMS_General_record_s__API_CMS_General_Search_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Contentid",
                        "type" : "string"
                    },
                    "name" : "ContentID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Specific Cms General Record S  Api Cms General Search Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Schema"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CMS/General/Update" : {
            "put" : {
                "tags" : [ "Content-Management" ],
                "summary" : "Update A Cms-General Record",
                "operationId" : "Update_a_CMS_General_record_API_CMS_General_Update_put",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Contentid",
                        "type" : "string"
                    },
                    "name" : "ContentID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Deleted",
                        "type" : "boolean"
                    },
                    "name" : "Deleted",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Schema"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CMS/General/Delete" : {
            "delete" : {
                "tags" : [ "Content-Management" ],
                "summary" : "Delete A Cms-General Record",
                "operationId" : "Delete_a_CMS_General_record_API_CMS_General_Delete_delete",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Contentid",
                        "type" : "string"
                    },
                    "name" : "ContentID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__CMS__Schemas__General__Delete"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Note/Search" : {
            "get" : {
                "tags" : [ "User-Management", "Note" ],
                "summary" : "Get",
                "description" : "... ",
                "operationId" : "GET_API_User_Note_Search_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Internal",
                        "type" : "boolean"
                    },
                    "name" : "Internal",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ]
                    },
                    "name" : "User",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "All",
                        "type" : "boolean",
                        "default" : false
                    },
                    "name" : "All",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Get Api User Note Search Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                                    } ]
                                },
                                "example" : { }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Note/All" : {
            "get" : {
                "tags" : [ "User-Management", "Note" ],
                "summary" : "List All Users' Notes",
                "description" : "... ",
                "operationId" : "List_all_Users__Notes_API_User_Note_All_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Skip",
                        "type" : "integer",
                        "default" : 0
                    },
                    "name" : "Skip",
                    "in" : "query"
                }, {
                    "required" : false,
                    "schema" : {
                        "title" : "Limit",
                        "type" : "integer",
                        "default" : 100
                    },
                    "name" : "Limit",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response List All Users  Notes Api User Note All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Note/Create" : {
            "post" : {
                "tags" : [ "User-Management", "Note" ],
                "summary" : "Create A Complete User Record",
                "description" : "Create a User Note Database Record ",
                "operationId" : "Create_a_Complete_User_Record_API_User_Note_Create_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "User",
                        "type" : "string"
                    },
                    "name" : "User",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__User__Schemas__Note__Base"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Note/Update" : {
            "put" : {
                "tags" : [ "User-Management", "Note" ],
                "summary" : "Update A User Note Record",
                "description" : "Update a User Note Database Record ",
                "operationId" : "Update_a_User_Note_Record_API_User_Note_Update_put",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Database__User__Schemas__Note__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/User/Note/Delete" : {
            "delete" : {
                "tags" : [ "User-Management", "Note" ],
                "summary" : "Decommission A User Note Via Uuid",
                "description" : "Delete a User Note Database Record",
                "operationId" : "Decommission_a_User_Note_via_UUID_API_User_Note_Delete_delete",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        } ]
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__User__Schemas__Note__Delete"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Website/Index" : {
            "get" : {
                "tags" : [ "Web", "Website" ],
                "summary" : "Query Websites Via Optional Index",
                "description" : "... ",
                "operationId" : "Query_Websites_via_Optional_Index_API_Web_Website_Index_get",
                "parameters" : [ {
                    "description" : "Website Record ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Website Record ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Websites Via Optional Index Api Web Website Index Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Web__Schemas__Website__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__Web__Schemas__Website__Schema"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Website/Search" : {
            "get" : {
                "tags" : [ "Web", "Website" ],
                "summary" : "Query Websites",
                "description" : "... ",
                "operationId" : "Query_Websites_API_Web_Website_Search_get",
                "parameters" : [ {
                    "description" : "Website Record ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Website Record ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "description" : "Website Entry Name",
                    "required" : false,
                    "schema" : {
                        "title" : "Fqdn",
                        "type" : "string",
                        "description" : "Website Entry Name"
                    },
                    "name" : "FQDN",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Websites Api Web Website Search Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Web__Schemas__Website__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__Web__Schemas__Website__Schema"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Website/Create" : {
            "post" : {
                "tags" : [ "Web", "Website" ],
                "summary" : "Publish Website Records",
                "description" : "... ",
                "operationId" : "Publish_Website_Records_API_Web_Website_Create_post",
                "parameters" : [ {
                    "description" : "FQDN",
                    "required" : true,
                    "schema" : {
                        "title" : "Name",
                        "type" : "string",
                        "description" : "FQDN"
                    },
                    "name" : "Name",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Web__Schemas__Website__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Breadcrumb/Index" : {
            "get" : {
                "tags" : [ "Web", "Breadcrumb" ],
                "summary" : "Query Website Breadcrumbs Via Optional Index",
                "description" : "... ",
                "operationId" : "Query_Website_Breadcrumbs_via_Optional_Index_API_Web_Breadcrumb_Index_get",
                "parameters" : [ {
                    "description" : "Breadcrumb Record ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Breadcrumb Record ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Website Breadcrumbs Via Optional Index Api Web Breadcrumb Index Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Breadcrumb/Search" : {
            "get" : {
                "tags" : [ "Web", "Breadcrumb" ],
                "summary" : "Query Website Breadcrumbs",
                "description" : "... ",
                "operationId" : "Query_Website_Breadcrumbs_API_Web_Breadcrumb_Search_get",
                "parameters" : [ {
                    "description" : "Breadcrumb Record ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "description" : "Breadcrumb Record ID"
                    },
                    "name" : "ID",
                    "in" : "query"
                }, {
                    "description" : "Website Record ID",
                    "required" : false,
                    "schema" : {
                        "title" : "Wid",
                        "type" : "string",
                        "description" : "Website Record ID"
                    },
                    "name" : "WID",
                    "in" : "query"
                }, {
                    "description" : "Breadcrumb's Website Name",
                    "required" : false,
                    "schema" : {
                        "title" : "Fqdn",
                        "type" : "string",
                        "description" : "Breadcrumb's Website Name"
                    },
                    "name" : "FQDN",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Website Breadcrumbs Api Web Breadcrumb Search Get",
                                    "anyOf" : [ {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                                        }
                                    }, {
                                        "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                                    } ]
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Web/Breadcrumb/Create" : {
            "post" : {
                "tags" : [ "Web", "Breadcrumb" ],
                "summary" : "Publish Website Breadcrumb Records Via Fields",
                "description" : "...  ",
                "operationId" : "Publish_Website_Breadcrumb_Records_via_Fields_API_Web_Breadcrumb_Create_post",
                "parameters" : [ {
                    "description" : "Website's UUID",
                    "required" : true,
                    "schema" : {
                        "title" : "Website",
                        "type" : "string",
                        "description" : "Website's UUID"
                    },
                    "name" : "Website",
                    "in" : "query"
                }, {
                    "description" : "HTML Breadcrumb",
                    "required" : true,
                    "schema" : {
                        "title" : "Path",
                        "type" : "string",
                        "description" : "HTML Breadcrumb"
                    },
                    "name" : "Path",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution"
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                                }
                            }
                        }
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/Date" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Date",
                "description" : "# Date API #",
                "operationId" : "Date_API_Date_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/ISO/Day" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Iso-Calendar Day",
                "description" : "...  ",
                "operationId" : "Current_ISO_Calendar_Day_API_Date_ISO_Day_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/API__ASGI__Utilities__Type"
                        } ],
                        "default" : "Integer"
                    },
                    "name" : "Type",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/ISO/Week" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Iso-Calendar Week",
                "description" : "...  ",
                "operationId" : "Current_ISO_Calendar_Week_API_Date_ISO_Week_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/API__ASGI__Utilities__Type"
                        } ],
                        "default" : "Integer"
                    },
                    "name" : "Type",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/ISO/Year" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Iso-Calendar Year",
                "description" : "...  ",
                "operationId" : "Current_ISO_Calendar_Year_API_Date_ISO_Year_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/API__ASGI__Utilities__Type"
                        } ],
                        "default" : "Integer"
                    },
                    "name" : "Type",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/ISO" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Iso Calendar",
                "description" : "...  ",
                "operationId" : "Current_ISO_Calendar_API_Date_ISO_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/Week" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Week Number",
                "description" : "...  ",
                "operationId" : "Current_Week_Number_API_Date_Week_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/API__ASGI__Utilities__Type"
                        } ],
                        "default" : "Integer"
                    },
                    "name" : "Type",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Date/Day" : {
            "get" : {
                "tags" : [ "Utilities", "Date" ],
                "summary" : "Current Day As Integer",
                "description" : "...  ",
                "operationId" : "Current_Day_as_Integer_API_Date_Day_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/API__ASGI__Utilities__Type"
                        } ],
                        "default" : "Integer"
                    },
                    "name" : "Type",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Response",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/UUID/Generate" : {
            "get" : {
                "tags" : [ "Utilities", "UUID" ],
                "summary" : "Generate A Random Uuid",
                "description" : "...",
                "operationId" : "Generate_a_Random_UUID_API_UUID_Generate_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Format",
                        "type" : "boolean",
                        "default" : true
                    },
                    "name" : "Format",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : { }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Awaitable" : {
            "get" : {
                "tags" : [ "Utilities", "Awaitable" ],
                "summary" : "Awaitable (Get)",
                "description" : "# Spawn an Awaitable #\n\n*Waiter will block for 5 seconds by default.*",
                "operationId" : "Awaitable__GET__API_Awaitable_get",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Time",
                        "type" : "integer",
                        "default" : 5
                    },
                    "name" : "Time",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Awaitable  Get  Api Awaitable Get",
                                    "type" : "boolean"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put" : {
                "tags" : [ "Utilities", "Awaitable" ],
                "summary" : "Awaitable (Put)",
                "description" : "# Spawn an Awaitable #\n\n*Waiter will block for 5 seconds by default.*",
                "operationId" : "Awaitable__PUT__API_Awaitable_put",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Time",
                        "type" : "integer",
                        "default" : 5
                    },
                    "name" : "Time",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "title" : "Data",
                                "anyOf" : [ {
                                    "type" : "string"
                                }, {
                                    "type" : "object"
                                } ],
                                "default" : { }
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Awaitable  Put  Api Awaitable Put",
                                    "type" : "object"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post" : {
                "tags" : [ "Utilities", "Awaitable" ],
                "summary" : "Awaitable (Post)",
                "description" : "# Spawn an Awaitable #\n\n*Waiter will block for 5 seconds by default.*",
                "operationId" : "Awaitable__POST__API_Awaitable_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Time",
                        "type" : "integer",
                        "default" : 5
                    },
                    "name" : "Time",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "title" : "Data",
                                "anyOf" : [ {
                                    "type" : "string"
                                }, {
                                    "type" : "object"
                                } ],
                                "default" : { }
                            }
                        }
                    }
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Awaitable  Post  Api Awaitable Post",
                                    "type" : "object"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete" : {
                "tags" : [ "Utilities", "Awaitable" ],
                "summary" : "Awaitable (Delete)",
                "description" : "# Spawn an Awaitable #\n\n*Waiter will block for 5 seconds by default.*",
                "operationId" : "Awaitable__DELETE__API_Awaitable_delete",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Time",
                        "type" : "integer",
                        "default" : 5
                    },
                    "name" : "Time",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Awaitable  Delete  Api Awaitable Delete",
                                    "type" : "boolean"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Validation Error",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/API/Gitlab/Pages" : {
            "get" : {
                "tags" : [ "Git", "Gitlab" ],
                "summary" : "Query Gitlab Repositories (Pages)",
                "operationId" : "Query_Gitlab_Repositories__Pages__API_Gitlab_Pages_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Gitlab Repositories  Pages  Api Gitlab Pages Get",
                                    "type" : "object",
                                    "additionalProperties" : {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Project"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Gitlab/Projects" : {
            "get" : {
                "tags" : [ "Git", "Gitlab" ],
                "summary" : "Query Gitlab Repositories (Projects)",
                "operationId" : "Query_Gitlab_Repositories__Projects__API_Gitlab_Projects_get",
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query Gitlab Repositories  Projects  Api Gitlab Projects Get",
                                    "type" : "array",
                                    "items" : {
                                        "type" : "array",
                                        "items" : {
                                            "$ref" : "#/components/schemas/Project"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/File-Upload/Image/Test" : {
            "post" : {
                "tags" : [ "Image" ],
                "summary" : "Simulate An Image, File Upload",
                "operationId" : "Simulate_an_Image__File_Upload_API_File_Upload_Image_Test_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "File-Name",
                        "type" : "string",
                        "default" : "Test-File-Name"
                    },
                    "name" : "File-Name",
                    "in" : "query"
                }, {
                    "description" : "Additional, Simulated Wait-Time; used to test and debug larger file upload sixes.",
                    "required" : false,
                    "schema" : {
                        "title" : "Await",
                        "type" : "number",
                        "description" : "Additional, Simulated Wait-Time; used to test and debug larger file upload sixes.",
                        "default" : 10
                    },
                    "name" : "Await",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "multipart/form-data" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Body_Simulate_an_Image__File_Upload_API_File_Upload_Image_Test_post"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Successful Request Resolution",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/API__Upload__Schemas__Image__Response"
                                }
                            }
                        }
                    },
                    "201" : {
                        "description" : "Created - Request has Successfully Provisioned a New Resource"
                    },
                    "202" : {
                        "description" : "Accepted & Processing - Request has been Queued but Cannot be Awaited"
                    },
                    "204" : {
                        "description" : "Successful Query - Response has been Cached"
                    },
                    "205" : {
                        "description" : "Request Initiated - Client is Requested for a DOM Reset"
                    },
                    "400" : {
                        "description" : "Malformed Request - Client Modification(s) Required"
                    },
                    "401" : {
                        "description" : "Access Conditionally Denied - Client Authentication Required"
                    },
                    "403" : {
                        "description" : "Access Denied - Insufficient Application Permission(s)"
                    },
                    "404" : {
                        "description" : "Resource Not Found - Requested Target Resource is Temporarily or Permanently Missing"
                    },
                    "405" : {
                        "description" : "Unsupported Request Method - Target Resource URI is Denied"
                    },
                    "409" : {
                        "description" : "Write Conflict - Source State Conflict with Requested Target Resource"
                    },
                    "415" : {
                        "description" : "Unsupported Media Type - Content Encoding || Type Refused by Server"
                    },
                    "422" : {
                        "description" : "Unprocessable Entity - Content Encoding && Type Accepted, Malformed Client Data"
                    }
                }
            }
        },
        "/API/CSGO/All" : {
            "get" : {
                "tags" : [ "Gaming", "CSGO" ],
                "summary" : "CSGO C[R]UD (All) Endpoint",
                "operationId" : "Query_All_CSGO_Configurations_API_CSGO_All_get",
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Csgo Configurations Api Csgo All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/CSGO/{ID}" : {
            "get" : {
                "tags" : [ "Gaming", "CSGO" ],
                "summary" : "CSGO C[R]UD Endpoint",
                "operationId" : "Query_a_CSGO_Configuration_API_CSGO__ID__get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "path"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/CSGO/Create" : {
            "post" : {
                "tags" : [ "Gaming", "CSGO" ],
                "summary" : "CSGO [C]RUD Endpoint",
                "operationId" : "Create_A_CSGO_Configuration_API_CSGO_Create_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Base"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "201" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/CSGO/Update" : {
            "put" : {
                "tags" : [ "Gaming", "CSGO" ],
                "summary" : "CSGO CR[U]D Endpoint",
                "operationId" : "Mutate_A_CSGO_Configuration_API_CSGO_Update_put",
                "parameters" : [ {
                    "description" : "Non-Relational Database Record Index",
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Non-Relational Database Record Index"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Gaming__Schemas__CSGO__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/CSGO/Drop" : {
            "delete" : {
                "tags" : [ "Gaming", "CSGO" ],
                "summary" : "CSGO CRU[D] Endpoint",
                "operationId" : "Delete_A_CSGO_Configuration_API_CSGO_Drop_delete",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Delete A Csgo Configuration Api Csgo Drop Delete",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/pydantic__dataclasses__Success"
                                    }, {
                                        "$ref" : "#/components/schemas/pydantic__dataclasses__Response"
                                    } ]
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/Task/All" : {
            "get" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard C[R]UD (All) Endpoint",
                "operationId" : "Query_All_Taskboard_Configurations_API_Task_All_get",
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Taskboard Configurations Api Task All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Task/{ID}" : {
            "get" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard C[R]UD Endpoint",
                "operationId" : "Query_a_Taskboard_Configuration_API_Task__ID__get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "path"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Task/Create" : {
            "post" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard [C]RUD Endpoint",
                "operationId" : "Create_A_Taskboard_Task_Document_API_Task_Create_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Token",
                        "type" : "string"
                    },
                    "name" : "Token",
                    "in" : "header"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Base"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "201" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Task/Update" : {
            "put" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard CR[U]D Endpoint",
                "operationId" : "Mutate_A_Taskboard_Task_Document_API_Task_Update_put",
                "parameters" : [ {
                    "description" : "Non-Relational Database Record Index",
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Non-Relational Database Record Index"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Task/Drop" : {
            "delete" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard CRU[D] Endpoint",
                "operationId" : "Delete_A_Taskboard_Task_Document_API_Task_Drop_delete",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Delete A Taskboard Task Document Api Task Drop Delete",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Success"
                                    }, {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Response"
                                    } ]
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Linked-Resource/All" : {
            "get" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard C[R]UD (All) Endpoint",
                "operationId" : "Query_All_Taskboard_Configurations_API_Linked_Resource_All_get",
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Taskboard Configurations Api Linked Resource All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Linked-Resource/{ID}" : {
            "get" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard C[R]UD Endpoint",
                "operationId" : "Query_a_Taskboard_Configuration_API_Linked_Resource__ID__get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "path"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Linked-Resource/Create" : {
            "post" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard [C]RUD Endpoint",
                "operationId" : "Create_A_Taskboard_Task_Document_API_Linked_Resource_Create_post",
                "parameters" : [ {
                    "required" : false,
                    "schema" : {
                        "title" : "Token",
                        "type" : "string"
                    },
                    "name" : "Token",
                    "in" : "header"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Base"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "201" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Linked-Resource/Update" : {
            "put" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard CR[U]D Endpoint",
                "description" : "...",
                "operationId" : "Mutate_A_Taskboard_Task_Document_API_Linked_Resource_Update_put",
                "parameters" : [ {
                    "description" : "Non-Relational Database Record Index",
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Non-Relational Database Record Index"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Linked-Resource/Drop" : {
            "delete" : {
                "tags" : [ "Taskboard" ],
                "summary" : "Taskboard CRU[D] Endpoint",
                "description" : "...",
                "operationId" : "Delete_A_Taskboard_Task_Document_API_Linked_Resource_Drop_delete",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Delete A Taskboard Task Document Api Linked Resource Drop Delete",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Success"
                                    }, {
                                        "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Response"
                                    } ]
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                },
                "security" : [ {
                    "OAuth2PasswordBearer" : [ ]
                } ]
            }
        },
        "/API/Calendar/All" : {
            "get" : {
                "tags" : [ "Calendar-All" ],
                "summary" : "Calendar C[R]UD (All) Endpoint",
                "operationId" : "Query_All_Calendar_Configurations_API_Calendar_All_get",
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Query All Calendar Configurations Api Calendar All Get",
                                    "type" : "array",
                                    "items" : {
                                        "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Schema"
                                    }
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/Calendar/{ID}" : {
            "get" : {
                "tags" : [ "Calendar" ],
                "summary" : "Calendar C[R]UD Endpoint",
                "operationId" : "Query_a_Calendar_Configuration_API_Calendar__ID__get",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "path"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/Calendar/Create" : {
            "post" : {
                "tags" : [ "Calendar-Create" ],
                "summary" : "Calendar [C]RUD Endpoint",
                "operationId" : "Create_A_Calendar_Configuration_API_Calendar_Create_post",
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Base"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "201" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Create"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/Calendar/Update" : {
            "put" : {
                "tags" : [ "Calendar-Update" ],
                "summary" : "Calendar CR[U]D Endpoint",
                "operationId" : "Mutate_A_Calendar_Configuration_API_Calendar_Update_put",
                "parameters" : [ {
                    "description" : "Non-Relational Database Record Index",
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Non-Relational Database Record Index"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "requestBody" : {
                    "content" : {
                        "application/json" : {
                            "schema" : {
                                "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Update"
                            }
                        }
                    },
                    "required" : true
                },
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Schema"
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        },
        "/API/Calendar/Drop" : {
            "delete" : {
                "tags" : [ "Calendar-Drop" ],
                "summary" : "Calendar CRU[D] Endpoint",
                "operationId" : "Delete_A_Calendar_Configuration_API_Calendar_Drop_delete",
                "parameters" : [ {
                    "required" : true,
                    "schema" : {
                        "title" : "Id",
                        "type" : "string"
                    },
                    "name" : "ID",
                    "in" : "query"
                } ],
                "responses" : {
                    "200" : {
                        "description" : "Query Response Return",
                        "content" : {
                            "application/json" : {
                                "schema" : {
                                    "title" : "Response Delete A Calendar Configuration Api Calendar Drop Delete",
                                    "anyOf" : [ {
                                        "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Success"
                                    }, {
                                        "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Response"
                                    } ]
                                }
                            }
                        }
                    },
                    "422" : {
                        "description" : "Type (Schema) Validation Error"
                    }
                }
            }
        }
    },
    "components" : {
        "schemas" : {
            "API__ASGI__Utilities__Type" : {
                "title" : "Type",
                "enum" : [ "String", "Integer", "Bytes", "Pointer", "Array", "Hexadecimal" ],
                "type" : "string",
                "description" : "Industry Types"
            },
            "API__Upload__Schemas__Image__Response" : {
                "title" : "Upload-Image-Image",
                "required" : [ "Status", "Name", "Size" ],
                "type" : "object",
                "properties" : {
                    "Status" : {
                        "$ref" : "#/components/schemas/API__Upload__Schemas__Image__Status"
                    },
                    "Name" : {
                        "title" : "Name",
                        "type" : "string"
                    },
                    "Extension" : {
                        "title" : "Extension",
                        "anyOf" : [ {
                            "$ref" : "#/components/schemas/Extensions"
                        }, {
                            "type" : "string"
                        } ]
                    },
                    "Size" : {
                        "$ref" : "#/components/schemas/Size"
                    }
                },
                "description" : "..."
            },
            "API__Upload__Schemas__Image__Status" : {
                "title" : "Upload-Image-Status",
                "type" : "object",
                "properties" : {
                    "Code" : {
                        "title" : "Code",
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "default" : "File Successfully Uploaded"
                    }
                },
                "description" : "..."
            },
            "Access" : {
                "title" : "Gitlab-Repository-Access",
                "type" : "object",
                "properties" : {
                    "notification_level" : {
                        "title" : "Notification Level",
                        "type" : "integer"
                    },
                    "access_level" : {
                        "title" : "Access Level",
                        "type" : "integer"
                    }
                },
                "description" : "..."
            },
            "Address" : {
                "title" : "Address",
                "required" : [ "Assignment", "FQDN", "V6" ],
                "type" : "object",
                "properties" : {
                    "Assignment" : {
                        "title" : "Assignment",
                        "type" : "string",
                        "description" : "Game Server Public IPv4 || IPv6 Address"
                    },
                    "FQDN" : {
                        "title" : "Fqdn",
                        "type" : "string",
                        "description" : "Public-Facing Hostname via DNS A Record"
                    },
                    "V6" : {
                        "title" : "V6",
                        "type" : "boolean",
                        "description" : "Boolean Flag Evaluating the IP-V6 Assignment Property"
                    }
                },
                "description" : "..."
            },
            "Application" : {
                "title" : "Application",
                "type" : "object",
                "properties" : {
                    "Web-URL" : {
                        "title" : "Web-Url",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "format" : "uri",
                        "default" : "https://google.com"
                    },
                    "External-ID" : {
                        "title" : "External-Id",
                        "type" : "string",
                        "default" : ""
                    },
                    "Schematic" : {
                        "title" : "Schematic",
                        "type" : "string",
                        "format" : "json-string",
                        "default" : "{}"
                    }
                },
                "description" : "..."
            },
            "Association" : {
                "title" : "Unit-Association",
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Research & Development"
                    },
                    "Company-ID" : {
                        "title" : "Company-Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Author" : {
                "title" : "Author",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "default" : ""
                    },
                    "Email" : {
                        "title" : "Email",
                        "type" : "string",
                        "default" : ""
                    },
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Board" : {
                "title" : "Board",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Collection-Board ID",
                        "default" : ""
                    },
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "description" : "Collection-board Title",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Collection-Board",
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Body_Create_a_Discord_User_API_Discord_post" : {
                "title" : "Body_Create_a_Discord_User_API_Discord_post",
                "required" : [ "Discord" ],
                "type" : "object",
                "properties" : {
                    "Discord" : {
                        "$ref" : "#/components/schemas/Database__Discord__Schemas__User__Base"
                    },
                    "Role" : {
                        "$ref" : "#/components/schemas/Database__Discord__Schemas__Role__Base"
                    },
                    "Avatar" : {
                        "$ref" : "#/components/schemas/Database__Discord__Schemas__Avatar__Base"
                    },
                    "Note" : {
                        "title" : "Note",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Discord__Schemas__Note__Base"
                        }
                    }
                }
            },
            "Body_JWT_API_Authentication_Token_post" : {
                "title" : "Body_JWT_API_Authentication_Token_post",
                "required" : [ "grant_type", "username", "password" ],
                "type" : "object",
                "properties" : {
                    "grant_type" : {
                        "title" : "Grant Type",
                        "pattern" : "password",
                        "type" : "string"
                    },
                    "username" : {
                        "title" : "Username",
                        "type" : "string"
                    },
                    "password" : {
                        "title" : "Password",
                        "type" : "string"
                    },
                    "scope" : {
                        "title" : "Scope",
                        "type" : "string",
                        "default" : ""
                    },
                    "client_id" : {
                        "title" : "Client Id",
                        "type" : "string"
                    },
                    "client_secret" : {
                        "title" : "Client Secret",
                        "type" : "string"
                    }
                }
            },
            "Body_Simulate_an_Image__File_Upload_API_File_Upload_Image_Test_post" : {
                "title" : "Body_Simulate_an_Image__File_Upload_API_File_Upload_Image_Test_post",
                "required" : [ "File" ],
                "type" : "object",
                "properties" : {
                    "File" : {
                        "title" : "File",
                        "type" : "string",
                        "format" : "binary"
                    }
                }
            },
            "Count" : {
                "title" : "Synopsis-Count",
                "required" : [ "Total" ],
                "type" : "object",
                "properties" : {
                    "Total" : {
                        "title" : "Total",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    }
                },
                "description" : "..."
            },
            "Database__AGILE__Schemas__Note__Schema" : {
                "title" : "Note-Schema",
                "required" : [ "ID", "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : false
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Synopsis-Foreign-Key" : {
                        "title" : "Synopsis-Foreign-Key",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__AGILE__Schemas__Note__Shard" : {
                "title" : "Note-Shard",
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : false
                    }
                },
                "description" : "..."
            },
            "Database__AGILE__Schemas__Synopsis__JSON" : {
                "title" : "Synopsis-JSON",
                "required" : [ "UID", "Synopsis", "Projection" ],
                "type" : "object",
                "properties" : {
                    "UID" : {
                        "title" : "Uid",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Nexus Username, Email, or Associated Account Alias"
                    },
                    "Synopsis" : {
                        "title" : "Synopsis",
                        "type" : "string",
                        "description" : "Progression"
                    },
                    "Projection" : {
                        "title" : "Projection",
                        "type" : "string",
                        "description" : "Projection"
                    },
                    "Complication" : {
                        "title" : "Complication",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Deficit"
                    },
                    "Note" : {
                        "title" : "Note",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__AGILE__Schemas__Note__Shard"
                        } ],
                        "description" : "Content Body for a Note Record"
                    },
                    "Day" : {
                        "title" : "Day",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Day",
                        "default" : 6
                    },
                    "Week" : {
                        "title" : "Week",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Week",
                        "default" : 26
                    },
                    "Year" : {
                        "title" : "Year",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Year",
                        "default" : 2021
                    }
                },
                "description" : "..."
            },
            "Database__AGILE__Schemas__Synopsis__Schema" : {
                "title" : "Synopsis-Schema",
                "required" : [ "UID", "Synopsis", "Projection", "ID", "User", "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "UID" : {
                        "title" : "Uid",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Nexus Username, Email, or Associated Account Alias"
                    },
                    "Synopsis" : {
                        "title" : "Synopsis",
                        "type" : "string",
                        "description" : "Progression"
                    },
                    "Projection" : {
                        "title" : "Projection",
                        "type" : "string",
                        "description" : "Projection"
                    },
                    "Complication" : {
                        "title" : "Complication",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Deficit"
                    },
                    "Note" : {
                        "$ref" : "#/components/schemas/Database__AGILE__Schemas__Note__Schema"
                    },
                    "Day" : {
                        "title" : "Day",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Day",
                        "default" : 6
                    },
                    "Week" : {
                        "title" : "Week",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Week",
                        "default" : 26
                    },
                    "Year" : {
                        "title" : "Year",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "ISO Calendar Year",
                        "default" : 2021
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ]
                    },
                    "User" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__AGILE__Schemas__Synopsis__Shard" : {
                "title" : "Synopsis-Shard",
                "required" : [ "UID", "Synopsis", "Projection", "Day", "Week", "Year", "ID", "Date" ],
                "type" : "object",
                "properties" : {
                    "UID" : {
                        "title" : "Uid",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Nexus Username, Email, or Associated Account Alias"
                    },
                    "Synopsis" : {
                        "title" : "Synopsis",
                        "type" : "string",
                        "description" : "Progression"
                    },
                    "Projection" : {
                        "title" : "Projection",
                        "type" : "string",
                        "description" : "Projection"
                    },
                    "Complication" : {
                        "title" : "Complication",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "description" : "Deficit"
                    },
                    "Note" : {
                        "title" : "Note",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__AGILE__Schemas__Note__Shard"
                        } ],
                        "description" : "Content Body for a Note Record"
                    },
                    "Day" : {
                        "title" : "Day",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Week" : {
                        "title" : "Week",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Year" : {
                        "title" : "Year",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "User" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                    },
                    "Date" : {
                        "title" : "Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "Limited Response with Limited User Resolution"
            },
            "Database__Business__Schemas__Company__Create" : {
                "title" : "Company-Create",
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Cloud-Technology LLC."
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "IT"
                    },
                    "Website" : {
                        "title" : "Website",
                        "anyOf" : [ {
                            "type" : "string",
                            "minLength" : 1,
                            "maxLength" : 65536,
                            "format" : "uri"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : "https://code.cloud-technology.io/"
                    }
                },
                "description" : "Input Arguments:"
            },
            "Database__Business__Schemas__Company__Schema" : {
                "title" : "Company-Schema",
                "required" : [ "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Cloud-Technology LLC."
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "IT"
                    },
                    "Website" : {
                        "title" : "Website",
                        "anyOf" : [ {
                            "type" : "string",
                            "minLength" : 1,
                            "maxLength" : 65536,
                            "format" : "uri"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : "https://code.cloud-technology.io/"
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "default" : "5D8D29F1-960C-425D-9182-BF6EF0D68789"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Unit" : {
                        "title" : "Unit",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Schema"
                        }
                    }
                },
                "description" : "..."
            },
            "Database__Business__Schemas__Company__Shard" : {
                "title" : "Company-Shard",
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Cloud-Technology LLC."
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "IT"
                    },
                    "Website" : {
                        "title" : "Website",
                        "anyOf" : [ {
                            "type" : "string",
                            "minLength" : 1,
                            "maxLength" : 65536,
                            "format" : "uri"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : "https://code.cloud-technology.io/"
                    }
                },
                "description" : "..."
            },
            "Database__Business__Schemas__Unit__Base" : {
                "title" : "Unit",
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Research & Development"
                    }
                },
                "description" : "..."
            },
            "Database__Business__Schemas__Unit__Create" : {
                "title" : "Unit-Create",
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Research & Development"
                    }
                },
                "description" : "..."
            },
            "Database__Business__Schemas__Unit__Schema" : {
                "title" : "Unit-Schema",
                "required" : [ "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "Research & Development"
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "default" : "CCB4FF9A-196F-4E0F-94D8-B210EBCC2AFB"
                    },
                    "Company-ID" : {
                        "title" : "Company-Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        } ],
                        "default" : "BD2BE6A4-62CC-498F-93EA-3366F4B859E9"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "... "
            },
            "Database__CMS__Schemas__General__Create" : {
                "title" : "CMS-General-Create",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string"
                    },
                    "Author" : {
                        "title" : "Author",
                        "type" : "string"
                    },
                    "Author-ID" : {
                        "title" : "Author-Id",
                        "type" : "string"
                    },
                    "Content" : {
                        "title" : "Content",
                        "type" : "string"
                    },
                    "Content-ID" : {
                        "title" : "Content-Id",
                        "type" : "string"
                    },
                    "Type" : {
                        "title" : "Type",
                        "type" : "string"
                    },
                    "Tags" : {
                        "title" : "Tags",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Database__CMS__Schemas__General__Delete" : {
                "title" : "CMS-General-Delete",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string"
                    },
                    "Author" : {
                        "title" : "Author",
                        "type" : "string"
                    },
                    "Author-ID" : {
                        "title" : "Author-Id",
                        "type" : "string"
                    },
                    "Content" : {
                        "title" : "Content",
                        "type" : "string"
                    },
                    "Content-ID" : {
                        "title" : "Content-Id",
                        "type" : "string"
                    },
                    "Type" : {
                        "title" : "Type",
                        "type" : "string"
                    },
                    "Tags" : {
                        "title" : "Tags",
                        "type" : "string"
                    },
                    "Record-ID" : {
                        "title" : "Record-Id",
                        "type" : "string",
                        "default" : "E0B578F3-6A3D-41B2-B155-3CC79794672E"
                    },
                    "Record-Creation-Timestamp" : {
                        "title" : "Record-Creation-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Timestamp" : {
                        "title" : "Record-Modification-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Deletion-Timestamp" : {
                        "title" : "Record-Deletion-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__CMS__Schemas__General__Schema" : {
                "title" : "CMS-General-Schema",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string"
                    },
                    "Author" : {
                        "title" : "Author",
                        "type" : "string"
                    },
                    "Author-ID" : {
                        "title" : "Author-Id",
                        "type" : "string"
                    },
                    "Content" : {
                        "title" : "Content",
                        "type" : "string"
                    },
                    "Content-ID" : {
                        "title" : "Content-Id",
                        "type" : "string"
                    },
                    "Type" : {
                        "title" : "Type",
                        "type" : "string"
                    },
                    "Tags" : {
                        "title" : "Tags",
                        "type" : "string"
                    },
                    "Record-ID" : {
                        "title" : "Record-Id",
                        "type" : "string",
                        "default" : "792345F5-D996-4544-AE79-17A7416D4AEA"
                    },
                    "Record-Creation-Timestamp" : {
                        "title" : "Record-Creation-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Timestamp" : {
                        "title" : "Record-Modification-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Deletion-Timestamp" : {
                        "title" : "Record-Deletion-Timestamp",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__CMS__Schemas__General__Update" : {
                "title" : "CMS-General-Update",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string"
                    },
                    "Author" : {
                        "title" : "Author",
                        "type" : "string"
                    },
                    "Author-ID" : {
                        "title" : "Author-Id",
                        "type" : "string"
                    },
                    "Content" : {
                        "title" : "Content",
                        "type" : "string"
                    },
                    "Content-ID" : {
                        "title" : "Content-Id",
                        "type" : "string"
                    },
                    "Type" : {
                        "title" : "Type",
                        "type" : "string"
                    },
                    "Tags" : {
                        "title" : "Tags",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Avatar__Base" : {
                "title" : "Avatar",
                "type" : "object",
                "properties" : {
                    "Hash" : {
                        "title" : "Hash",
                        "type" : "string",
                        "default" : "Hash-0x00000000"
                    },
                    "Animation" : {
                        "title" : "Animation",
                        "type" : "boolean",
                        "default" : false
                    },
                    "URL" : {
                        "title" : "Url",
                        "type" : "string",
                        "default" : "https://cdn.discordapp.com/embed/avatars/1.png"
                    },
                    "Default-URL" : {
                        "title" : "Default-Url",
                        "type" : "string",
                        "default" : "https://cdn.discordapp.com/embed/avatars/1.png"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Avatar__Schema" : {
                "title" : "Avatar-Schema",
                "type" : "object",
                "properties" : {
                    "Hash" : {
                        "title" : "Hash",
                        "type" : "string",
                        "default" : "Hash-0x00000000"
                    },
                    "Animation" : {
                        "title" : "Animation",
                        "type" : "boolean",
                        "default" : false
                    },
                    "URL" : {
                        "title" : "Url",
                        "type" : "string",
                        "default" : "https://cdn.discordapp.com/embed/avatars/1.png"
                    },
                    "Default-URL" : {
                        "title" : "Default-Url",
                        "type" : "string",
                        "default" : "https://cdn.discordapp.com/embed/avatars/1.png"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "JSON" : {
                        "title" : "Json",
                        "type" : "object"
                    },
                    "Discord-User-ID" : {
                        "title" : "Discord-User-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Note__Base" : {
                "title" : "Note",
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Note__Delete" : {
                "title" : "Note-Delete",
                "required" : [ "ID" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Discord-User-ID" : {
                        "title" : "Discord-User-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Note__Schema" : {
                "title" : "Note-Schema",
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4",
                        "default" : "3E10012D-D510-4E7D-A668-D85CC61D628C"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Discord-User-ID" : {
                        "title" : "Discord-User-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Note__Update" : {
                "title" : "Note-Update",
                "required" : [ "ID" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Discord-User-ID" : {
                        "title" : "Discord-User-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Role__Base" : {
                "title" : "Role",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "@everyone"
                    },
                    "Color" : {
                        "title" : "Color",
                        "type" : "string",
                        "default" : "#FFFFFF"
                    },
                    "Guild-ID" : {
                        "title" : "Guild-Id",
                        "type" : "string"
                    },
                    "Hoist" : {
                        "title" : "Hoist",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Position" : {
                        "title" : "Position",
                        "type" : "integer"
                    },
                    "Managed" : {
                        "title" : "Managed",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Mentionable" : {
                        "title" : "Mentionable",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Default" : {
                        "title" : "Default",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Bot-Managed" : {
                        "title" : "Bot-Managed",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Integration" : {
                        "title" : "Integration",
                        "type" : "boolean"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__Role__Schema" : {
                "title" : "Role-Schema",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "default" : "@everyone"
                    },
                    "Color" : {
                        "title" : "Color",
                        "type" : "string",
                        "default" : "#FFFFFF"
                    },
                    "Guild-ID" : {
                        "title" : "Guild-Id",
                        "type" : "string"
                    },
                    "Hoist" : {
                        "title" : "Hoist",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Position" : {
                        "title" : "Position",
                        "type" : "integer"
                    },
                    "Managed" : {
                        "title" : "Managed",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Mentionable" : {
                        "title" : "Mentionable",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Default" : {
                        "title" : "Default",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Bot-Managed" : {
                        "title" : "Bot-Managed",
                        "type" : "boolean",
                        "default" : false
                    },
                    "Integration" : {
                        "title" : "Integration",
                        "type" : "boolean"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Role-Creation-Date" : {
                        "title" : "Role-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "JSON" : {
                        "title" : "Json",
                        "type" : "object"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__User__Base" : {
                "title" : "User",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Guild-ID" : {
                        "title" : "Guild-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Discriminator" : {
                        "title" : "Discriminator",
                        "type" : "string",
                        "default" : "0x0000"
                    },
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Bot"
                    }
                },
                "description" : "..."
            },
            "Database__Discord__Schemas__User__Schema" : {
                "title" : "User-Schema",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Guild-ID" : {
                        "title" : "Guild-Id",
                        "type" : "string",
                        "default" : "0x00000000"
                    },
                    "Discriminator" : {
                        "title" : "Discriminator",
                        "type" : "string",
                        "default" : "0x0000"
                    },
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Bot"
                    },
                    "Guild-Top-Permissions-Role" : {
                        "$ref" : "#/components/schemas/Database__Discord__Schemas__Role__Schema"
                    },
                    "Guild-Roles" : {
                        "title" : "Guild-Roles",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Discord__Schemas__Role__Schema"
                        }
                    },
                    "Note" : {
                        "title" : "Note",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Discord__Schemas__Note__Schema"
                        }
                    },
                    "Avatar" : {
                        "$ref" : "#/components/schemas/Database__Discord__Schemas__Avatar__Schema"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "JSON" : {
                        "title" : "Json",
                        "type" : "object"
                    },
                    "User-ID" : {
                        "title" : "User-Id",
                        "type" : "string",
                        "format" : "uuid4",
                        "default" : "AAB18FBF-4017-4D75-B8E3-FC2DE916334D"
                    }
                },
                "description" : "..."
            },
            "Database__User__Imports__ISO5218" : {
                "title" : "ISO5218",
                "enum" : [ 0, 1, 2, 9 ],
                "type" : "integer",
                "description" : "ISO/IEC 5218 - Gender Codes"
            },
            "Database__User__Schemas__ISO5218" : {
                "title" : "ISO5218",
                "enum" : [ 0, 1, 2, 9 ],
                "type" : "integer",
                "description" : "ISO/IEC 5218 - Gender Codes"
            },
            "Database__User__Schemas__Name__Create" : {
                "title" : "Name-Create",
                "type" : "object",
                "properties" : {
                    "First" : {
                        "title" : "First",
                        "type" : "string",
                        "default" : "Null"
                    },
                    "Middle" : {
                        "title" : "Middle",
                        "type" : "string",
                        "default" : "Segmentational"
                    },
                    "Last" : {
                        "title" : "Last",
                        "type" : "string",
                        "default" : "Byte"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Name__Schema" : {
                "title" : "Name-Schema",
                "required" : [ "ID", "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "First" : {
                        "title" : "First",
                        "type" : "string",
                        "default" : "Null"
                    },
                    "Middle" : {
                        "title" : "Middle",
                        "type" : "string",
                        "default" : "Segmentational"
                    },
                    "Last" : {
                        "title" : "Last",
                        "type" : "string",
                        "default" : "Byte"
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "User-ID" : {
                        "title" : "User-Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Nexus__Delete" : {
                "title" : "Nexus-Base-Delete",
                "required" : [ "ID" ],
                "type" : "object",
                "properties" : {
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Byte"
                    },
                    "Email-Address" : {
                        "title" : "Email-Address",
                        "type" : "string",
                        "default" : "Engineer@Cloud-Technology.IO"
                    },
                    "Preferred-Name" : {
                        "title" : "Preferred-Name",
                        "type" : "string",
                        "default" : "Null-Bot"
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Gender-Code" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__User__Schemas__ISO5218"
                        } ],
                        "default" : 9
                    },
                    "Password" : {
                        "title" : "Password",
                        "type" : "string",
                        "default" : "Kn0wledge!"
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Nexus__JSON" : {
                "title" : "Nexus-Base-JSON",
                "required" : [ "Name", "Verification", "Company", "Unit", "Note" ],
                "type" : "object",
                "properties" : {
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Byte"
                    },
                    "Email-Address" : {
                        "title" : "Email-Address",
                        "type" : "string",
                        "default" : "Engineer@Cloud-Technology.IO"
                    },
                    "Preferred-Name" : {
                        "title" : "Preferred-Name",
                        "type" : "string",
                        "default" : "Null-Bot"
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Gender-Code" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__User__Schemas__ISO5218"
                        } ],
                        "default" : 9
                    },
                    "Password" : {
                        "title" : "Password",
                        "type" : "string",
                        "default" : "Kn0wledge!"
                    },
                    "Name" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Name__Create"
                    },
                    "Verification" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Verification__Create"
                    },
                    "Company" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Create"
                    },
                    "Unit" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Create"
                    },
                    "Note" : {
                        "title" : "Note",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__User__Schemas__Note__Create"
                        }
                    }
                },
                "description" : "... "
            },
            "Database__User__Schemas__Nexus__Schema" : {
                "title" : "Nexus-Base-Schema",
                "required" : [ "Password", "ID", "Salt", "Token" ],
                "type" : "object",
                "properties" : {
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Byte"
                    },
                    "Email-Address" : {
                        "title" : "Email-Address",
                        "type" : "string",
                        "default" : "Engineer@Cloud-Technology.IO"
                    },
                    "Preferred-Name" : {
                        "title" : "Preferred-Name",
                        "type" : "string",
                        "default" : "Null-Bot"
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Gender-Code" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__User__Schemas__ISO5218"
                        } ],
                        "default" : 9
                    },
                    "Password" : {
                        "title" : "Password",
                        "type" : "string"
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "Salt" : {
                        "title" : "Salt",
                        "type" : "string"
                    },
                    "Token" : {
                        "title" : "Token",
                        "type" : "string"
                    },
                    "Name" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Name__Schema"
                    },
                    "Verification" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Verification__Schema"
                    },
                    "Company" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                    },
                    "Unit" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Base"
                    },
                    "Note" : {
                        "title" : "Note",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                        }
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "Contains Sensitive Information "
            },
            "Database__User__Schemas__Nexus__Shard" : {
                "title" : "Nexus-Shard",
                "type" : "object",
                "properties" : {
                    "Username" : {
                        "title" : "Username",
                        "type" : "string",
                        "default" : "Null-Byte"
                    },
                    "Email-Address" : {
                        "title" : "Email-Address",
                        "type" : "string",
                        "default" : "Engineer@Cloud-Technology.IO"
                    },
                    "Preferred-Name" : {
                        "title" : "Preferred-Name",
                        "type" : "string",
                        "default" : "Null-Bot"
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "default" : true
                    },
                    "Gender-Code" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Database__User__Schemas__ISO5218"
                        } ],
                        "default" : 9
                    },
                    "Password" : {
                        "title" : "Password",
                        "type" : "string",
                        "format" : "password",
                        "default" : "********",
                        "writeOnly" : true
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer"
                        } ],
                        "default" : "FD890266-E7B5-4A35-AA6A-3F26AAE02633"
                    },
                    "Salt" : {
                        "title" : "Salt",
                        "type" : "string",
                        "format" : "password",
                        "default" : "********",
                        "writeOnly" : true
                    },
                    "Token" : {
                        "title" : "Token",
                        "type" : "string",
                        "format" : "password",
                        "default" : "********",
                        "writeOnly" : true
                    },
                    "Company" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Company__Schema"
                    },
                    "Unit" : {
                        "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Base"
                    },
                    "Note" : {
                        "title" : "Note",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__User__Schemas__Note__Schema"
                        }
                    }
                },
                "description" : "Shard(Database.User.Schemas.Nexus.Shard) - `class`\n--------------------------------------------------------\n\nA Sharded, Nexus-User Schema with Private, Sensitive Information Sanitized.\n\n    Parent:\n        - `Database.User.Schemas.Nexus.Schema`\n\n    Arguments:\n        - `Password` (String): `User.Password`, Raw Value.\n        - `Salt` (String): `User.Salt`, Raw Value.\n        - `Token` (String): `User.Token`, Raw Value.\n\n    Attributes:\n        - `Password` (Secret): `User.Password`, Sanitized Value.\n        - `Salt` (Secret): `User.Salt`, Sanitized Value.\n        - `Token` (Secret): `User.Token`, Sanitized Value."
            },
            "Database__User__Schemas__Note__Base" : {
                "title" : "Note",
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Note__Create" : {
                "title" : "Note-Create",
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Note__Delete" : {
                "title" : "Note-Delete",
                "required" : [ "ID" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Note__Schema" : {
                "title" : "Note-Schema",
                "required" : [ "ID", "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Foreign-Key" : {
                        "title" : "Foreign-Key",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "string"
                        }, {
                            "type" : "integer"
                        } ]
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Note__Update" : {
                "title" : "Note-Update",
                "required" : [ "ID" ],
                "type" : "object",
                "properties" : {
                    "Content" : {
                        "title" : "Content",
                        "type" : "string",
                        "default" : "..."
                    },
                    "Internal" : {
                        "title" : "Internal",
                        "type" : "boolean",
                        "default" : true
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Verification__Create" : {
                "title" : "Verification-Create",
                "type" : "object",
                "properties" : {
                    "Verified" : {
                        "title" : "Verified",
                        "type" : "boolean",
                        "default" : false
                    }
                },
                "description" : "..."
            },
            "Database__User__Schemas__Verification__Schema" : {
                "title" : "Verification-Schema",
                "required" : [ "ID", "Record-Creation-Date" ],
                "type" : "object",
                "properties" : {
                    "Verified" : {
                        "title" : "Verified",
                        "type" : "boolean",
                        "default" : false
                    },
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Foreign-Key" : {
                        "title" : "Foreign-Key",
                        "type" : "string",
                        "format" : "uuid4"
                    },
                    "Record-Creation-Date" : {
                        "title" : "Record-Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Record-Modification-Date" : {
                        "title" : "Record-Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Database__Web__Schemas__Breadcrumb__Schema" : {
                "title" : "Breadcrumb-Schema",
                "type" : "object",
                "properties" : {
                    "Path" : {
                        "title" : "Path",
                        "type" : "string",
                        "description" : "Breadcrumb Path",
                        "default" : "/"
                    },
                    "Creation-Date" : {
                        "title" : "Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Modification-Date" : {
                        "title" : "Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "UUID" : {
                        "title" : "Uuid",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        }, {
                            "type" : "string"
                        } ],
                        "description" : "Record UUID",
                        "default" : "3C3F599C-F9B3-4176-AC50-0641CA677C8A"
                    },
                    "Website-Foreign-Key" : {
                        "title" : "Website-Foreign-Key",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        }, {
                            "type" : "string"
                        } ],
                        "description" : "Website-ID",
                        "default" : "C743862F-8015-4FBD-8D7D-384840B8636E"
                    }
                },
                "description" : "..."
            },
            "Database__Web__Schemas__Website__Schema" : {
                "title" : "Website-Schema",
                "required" : [ "UUID", "Breadcrumbs" ],
                "type" : "object",
                "properties" : {
                    "Website-FQDN" : {
                        "title" : "Website-Fqdn",
                        "type" : "string",
                        "description" : "Website Root FQDN",
                        "default" : "Example.IO"
                    },
                    "Creation-Date" : {
                        "title" : "Creation-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Modification-Date" : {
                        "title" : "Modification-Date",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "UUID" : {
                        "title" : "Uuid",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        }, {
                            "type" : "string"
                        } ],
                        "description" : "Record UUID"
                    },
                    "Breadcrumbs" : {
                        "title" : "Breadcrumbs",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Web__Schemas__Breadcrumb__Schema"
                        }
                    }
                },
                "description" : "..."
            },
            "DateMetadata" : {
                "title" : "DateMetadata",
                "type" : "object",
                "properties" : {
                    "Date-Time" : {
                        "title" : "Date-Time",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Time-Zone" : {
                        "title" : "Time-Zone",
                        "type" : "string",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Extensions" : {
                "title" : "Extensions",
                "enum" : [ "png", "jpeg", "svg", "jpg", "gif", "psd", "tiff", "bmp" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Gender" : {
                "title" : "Gender",
                "enum" : [ "N/A", "Male", "Female", "Other" ],
                "type" : "string",
                "description" : "ISO/IEC 5218 - Gender Codes"
            },
            "HTTPValidationError" : {
                "title" : "HTTPValidationError",
                "type" : "object",
                "properties" : {
                    "detail" : {
                        "title" : "Detail",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "Health" : {
                "title" : "Health",
                "type" : "object",
                "properties" : {
                    "Status" : {
                        "title" : "Status",
                        "type" : "string",
                        "default" : "Online"
                    },
                    "Time" : {
                        "title" : "Time",
                        "type" : "integer",
                        "default" : 1.625360805086843E9
                    }
                }
            },
            "Index" : {
                "title" : "Index",
                "enum" : [ "ID", "Name" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Industry" : {
                "title" : "Industry",
                "enum" : [ "IT", "Medical", "Construction", "Entertainment", "Transportation", "Security", "Consulting", "Hospitality", "Automobile", "Real-Estate", "Finance", "Insurance", "Oil", "Mining", "Energy", "Engineering", "Electronics", "Legal", "Telecommunications", "Retail", "Education", "Storage", "Textiles", "Agriculture", "Manufacturing", "Gaming", "Default" ],
                "type" : "string",
                "description" : "Industry Types"
            },
            "Mongo__Calendar__Schemas__Calendar__Base" : {
                "title" : "Calendar",
                "required" : [ "Summary" ],
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Type"
                        } ],
                        "default" : "Calendar"
                    },
                    "Summary" : {
                        "title" : "Summary",
                        "type" : "string"
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "default" : "[...]"
                    },
                    "Location" : {
                        "title" : "Location",
                        "type" : "string",
                        "default" : ""
                    },
                    "Time-Zone" : {
                        "title" : "Time-Zone",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Events-List" : {
                        "title" : "Events-List",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "default" : [ ]
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Calendar__Create" : {
                "title" : "Calendar-Create",
                "required" : [ "Summary" ],
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Type"
                        } ],
                        "default" : "Calendar"
                    },
                    "Summary" : {
                        "title" : "Summary",
                        "type" : "string"
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "default" : "[...]"
                    },
                    "Location" : {
                        "title" : "Location",
                        "type" : "string",
                        "default" : ""
                    },
                    "Time-Zone" : {
                        "title" : "Time-Zone",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Events-List" : {
                        "title" : "Events-List",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "default" : [ ]
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Calendar__Response" : {
                "title" : "Response",
                "required" : [ "Mutation", "Status", "Message" ],
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string"
                    },
                    "Status" : {
                        "title" : "Status",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Calendar__Schema" : {
                "title" : "Calendar-Schema",
                "required" : [ "Summary" ],
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Type"
                        } ],
                        "default" : "Calendar"
                    },
                    "Summary" : {
                        "title" : "Summary",
                        "type" : "string"
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "default" : "[...]"
                    },
                    "Location" : {
                        "title" : "Location",
                        "type" : "string",
                        "default" : ""
                    },
                    "Time-Zone" : {
                        "title" : "Time-Zone",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Events-List" : {
                        "title" : "Events-List",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "default" : [ ]
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Calendar__Success" : {
                "title" : "Success",
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string",
                        "default" : "[Mutation]"
                    },
                    "Status-Code" : {
                        "title" : "Status-Code",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "description" : "...",
                        "default" : "Success"
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Calendar__Type" : {
                "title" : "Type",
                "enum" : [ "Calendar", "Event" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Calendar__Schemas__Calendar__Update" : {
                "title" : "Calendar-Update",
                "required" : [ "Summary" ],
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Calendar__Type"
                        } ],
                        "default" : "Calendar"
                    },
                    "Summary" : {
                        "title" : "Summary",
                        "type" : "string"
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "default" : "[...]"
                    },
                    "Location" : {
                        "title" : "Location",
                        "type" : "string",
                        "default" : ""
                    },
                    "Time-Zone" : {
                        "title" : "Time-Zone",
                        "type" : "string",
                        "format" : "date-time"
                    },
                    "Events-List" : {
                        "title" : "Events-List",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "default" : [ ]
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    },
                    "Modification" : {
                        "title" : "Modification",
                        "type" : "string",
                        "description" : "Document Last Modified Date",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Create" : {
                "title" : "Event-Create",
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Type"
                        } ],
                        "description" : "Defines the type of Event",
                        "default" : "Event"
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Status"
                        } ],
                        "description" : "Defines the status of the current event",
                        "default" : "Confirmed"
                    },
                    "Link" : {
                        "title" : "Link",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Link to Event",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Creator" : {
                        "title" : "Creator",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Creator of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Organizer" : {
                        "title" : "Organizer",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Organizer of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Start-Date" : {
                        "title" : "Start-Date",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/DateMetadata"
                        } ],
                        "description" : "End date of the Event",
                        "default" : {
                            "DateTime" : "2021-07-03T20:06:47.051318",
                            "TimeZone" : "2021-07-03T20:06:47.051318"
                        }
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Schedule"
                        }
                    },
                    "Max-Attendees" : {
                        "title" : "Max-Attendees",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 1000
                    },
                    "Notify" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Updates"
                        } ],
                        "description" : "Notification of Event to attendees and guests",
                        "default" : "None"
                    },
                    "Self-Add" : {
                        "title" : "Self-Add",
                        "type" : "boolean",
                        "description" : "Defines whether anyone can add themselves to the event.",
                        "default" : false
                    },
                    "Participants" : {
                        "title" : "Participants",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "description" : "The list of participants of the Event",
                        "default" : [ ]
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "description" : "The description of the Event",
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Periodicity" : {
                "title" : "Periodicity",
                "enum" : [ "Daily", "Weekly", "Monthly", "" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Calendar__Schemas__Event__Response" : {
                "title" : "Response",
                "required" : [ "Mutation", "Status", "Message" ],
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string"
                    },
                    "Status" : {
                        "title" : "Status",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Schedule" : {
                "title" : "Schedule",
                "type" : "object",
                "properties" : {
                    "Frequency" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Periodicity"
                        } ],
                        "default" : ""
                    },
                    "Time" : {
                        "title" : "Time",
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "format" : "date-time"
                        }
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Schema" : {
                "title" : "Event-Schema",
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Type"
                        } ],
                        "description" : "Defines the type of Event",
                        "default" : "Event"
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Status"
                        } ],
                        "description" : "Defines the status of the current event",
                        "default" : "Confirmed"
                    },
                    "Link" : {
                        "title" : "Link",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Link to Event",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Creator" : {
                        "title" : "Creator",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Creator of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Organizer" : {
                        "title" : "Organizer",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Organizer of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Start-Date" : {
                        "title" : "Start-Date",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/DateMetadata"
                        } ],
                        "description" : "End date of the Event",
                        "default" : {
                            "DateTime" : "2021-07-03T20:06:47.051318",
                            "TimeZone" : "2021-07-03T20:06:47.051318"
                        }
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Schedule"
                        }
                    },
                    "Max-Attendees" : {
                        "title" : "Max-Attendees",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 1000
                    },
                    "Notify" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Updates"
                        } ],
                        "description" : "Notification of Event to attendees and guests",
                        "default" : "None"
                    },
                    "Self-Add" : {
                        "title" : "Self-Add",
                        "type" : "boolean",
                        "description" : "Defines whether anyone can add themselves to the event.",
                        "default" : false
                    },
                    "Participants" : {
                        "title" : "Participants",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "description" : "The list of participants of the Event",
                        "default" : [ ]
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "description" : "The description of the Event",
                        "default" : ""
                    },
                    "Calendar-ID" : {
                        "title" : "Calendar-Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Status" : {
                "title" : "Status",
                "enum" : [ "Confirmed", "Tentative", "Cancelled" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Calendar__Schemas__Event__Success" : {
                "title" : "Success",
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string",
                        "default" : "[Mutation]"
                    },
                    "Status-Code" : {
                        "title" : "Status-Code",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "description" : "...",
                        "default" : "Success"
                    }
                },
                "description" : "..."
            },
            "Mongo__Calendar__Schemas__Event__Type" : {
                "title" : "Type",
                "enum" : [ "Calendar", "Event" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Calendar__Schemas__Event__Update" : {
                "title" : "Event-Update",
                "type" : "object",
                "properties" : {
                    "Category" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Type"
                        } ],
                        "description" : "Defines the type of Event",
                        "default" : "Event"
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Status"
                        } ],
                        "description" : "Defines the status of the current event",
                        "default" : "Confirmed"
                    },
                    "Link" : {
                        "title" : "Link",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Link to Event",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Creator" : {
                        "title" : "Creator",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Creator of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Organizer" : {
                        "title" : "Organizer",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Author"
                        } ],
                        "description" : "Organizer of the Event",
                        "default" : {
                            "ID" : "",
                            "Email" : "",
                            "Name" : ""
                        }
                    },
                    "Start-Date" : {
                        "title" : "Start-Date",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/DateMetadata"
                        } ],
                        "description" : "End date of the Event",
                        "default" : {
                            "DateTime" : "2021-07-03T20:06:47.051318",
                            "TimeZone" : "2021-07-03T20:06:47.051318"
                        }
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Calendar__Schemas__Event__Schedule"
                        }
                    },
                    "Max-Attendees" : {
                        "title" : "Max-Attendees",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 1000
                    },
                    "Notify" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Updates"
                        } ],
                        "description" : "Notification of Event to attendees and guests",
                        "default" : "None"
                    },
                    "Self-Add" : {
                        "title" : "Self-Add",
                        "type" : "boolean",
                        "description" : "Defines whether anyone can add themselves to the event.",
                        "default" : false
                    },
                    "Participants" : {
                        "title" : "Participants",
                        "type" : "array",
                        "items" : {
                            "anyOf" : [ {
                                "type" : "string"
                            }, {
                                "type" : "string"
                            }, {
                                "type" : "string",
                                "format" : "uuid4"
                            } ]
                        },
                        "description" : "The list of participants of the Event",
                        "default" : [ ]
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "description" : "The description of the Event",
                        "default" : ""
                    },
                    "Modification" : {
                        "title" : "Modification",
                        "type" : "string",
                        "description" : "Document Last Modified Date",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Mongo__Gaming__Schemas__CSGO__Base" : {
                "title" : "CSGO",
                "type" : "object",
                "properties" : {
                    "Host" : {
                        "title" : "Host",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Address"
                        } ],
                        "description" : "Game Server Public IP(v4|v6) Address",
                        "default" : {
                            "Assignment" : "0.0.0.0",
                            "V6" : false
                        }
                    },
                    "Game-Port" : {
                        "title" : "Game-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Game Transmission Port",
                        "default" : {
                            "Name" : "Game",
                            "Value" : 27015,
                            "Protocol" : "UDP+TCP",
                            "Type" : "Port",
                            "Description" : "Game Transmission, Ping(s) and RCON Forward Port via TCP + UDP"
                        }
                    },
                    "Client-Port" : {
                        "title" : "Client-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Client Transmission Port",
                        "default" : {
                            "Name" : "Client",
                            "Value" : 27005,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Client Connection Port"
                        }
                    },
                    "Source-T-V-Port" : {
                        "title" : "Source-T-V-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Valve TV Transmission Port",
                        "default" : {
                            "Name" : "Valve-T-V",
                            "Value" : 27020,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Valve TV Connection Port"
                        }
                    },
                    "Default-Map" : {
                        "title" : "Default-Map",
                        "type" : "string",
                        "description" : "The Default Server Map",
                        "default" : "de_mirage"
                    },
                    "Map-Rotation" : {
                        "title" : "Map-Rotation",
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        },
                        "description" : "Available Server Ingame Map Rotation",
                        "default" : [ "de_mirage" ]
                    },
                    "Max-Players" : {
                        "title" : "Max-Players",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Maximum Server-Connected Players",
                        "default" : 16
                    },
                    "Tick-Rate" : {
                        "title" : "Tick-Rate",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Ingame Server-State Refresh Rate",
                        "default" : 64
                    }
                },
                "description" : "..."
            },
            "Mongo__Gaming__Schemas__CSGO__Schema" : {
                "title" : "CSGO-Schema",
                "type" : "object",
                "properties" : {
                    "Host" : {
                        "title" : "Host",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Address"
                        } ],
                        "description" : "Game Server Public IP(v4|v6) Address",
                        "default" : {
                            "Assignment" : "0.0.0.0",
                            "V6" : false
                        }
                    },
                    "Game-Port" : {
                        "title" : "Game-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Game Transmission Port",
                        "default" : {
                            "Name" : "Game",
                            "Value" : 27015,
                            "Protocol" : "UDP+TCP",
                            "Type" : "Port",
                            "Description" : "Game Transmission, Ping(s) and RCON Forward Port via TCP + UDP"
                        }
                    },
                    "Client-Port" : {
                        "title" : "Client-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Client Transmission Port",
                        "default" : {
                            "Name" : "Client",
                            "Value" : 27005,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Client Connection Port"
                        }
                    },
                    "Source-T-V-Port" : {
                        "title" : "Source-T-V-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Valve TV Transmission Port",
                        "default" : {
                            "Name" : "Valve-T-V",
                            "Value" : 27020,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Valve TV Connection Port"
                        }
                    },
                    "Default-Map" : {
                        "title" : "Default-Map",
                        "type" : "string",
                        "description" : "The Default Server Map",
                        "default" : "de_mirage"
                    },
                    "Map-Rotation" : {
                        "title" : "Map-Rotation",
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        },
                        "description" : "Available Server Ingame Map Rotation",
                        "default" : [ "de_mirage" ]
                    },
                    "Max-Players" : {
                        "title" : "Max-Players",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Maximum Server-Connected Players",
                        "default" : 16
                    },
                    "Tick-Rate" : {
                        "title" : "Tick-Rate",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Ingame Server-State Refresh Rate",
                        "default" : 64
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ]
                    }
                },
                "description" : "..."
            },
            "Mongo__Gaming__Schemas__CSGO__Update" : {
                "title" : "CSGO-Update",
                "type" : "object",
                "properties" : {
                    "Host" : {
                        "title" : "Host",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Address"
                        } ],
                        "description" : "Game Server Public IP(v4|v6) Address",
                        "default" : {
                            "Assignment" : "0.0.0.0",
                            "V6" : false
                        }
                    },
                    "Game-Port" : {
                        "title" : "Game-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Game Transmission Port",
                        "default" : {
                            "Name" : "Game",
                            "Value" : 27015,
                            "Protocol" : "UDP+TCP",
                            "Type" : "Port",
                            "Description" : "Game Transmission, Ping(s) and RCON Forward Port via TCP + UDP"
                        }
                    },
                    "Client-Port" : {
                        "title" : "Client-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Client Transmission Port",
                        "default" : {
                            "Name" : "Client",
                            "Value" : 27005,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Client Connection Port"
                        }
                    },
                    "Source-T-V-Port" : {
                        "title" : "Source-T-V-Port",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Port"
                        } ],
                        "description" : "Valve TV Transmission Port",
                        "default" : {
                            "Name" : "Valve-T-V",
                            "Value" : 27020,
                            "Protocol" : "UDP",
                            "Type" : "Port",
                            "Description" : "Valve TV Connection Port"
                        }
                    },
                    "Default-Map" : {
                        "title" : "Default-Map",
                        "type" : "string",
                        "description" : "The Default Server Map",
                        "default" : "de_mirage"
                    },
                    "Map-Rotation" : {
                        "title" : "Map-Rotation",
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        },
                        "description" : "Available Server Ingame Map Rotation",
                        "default" : [ "de_mirage" ]
                    },
                    "Max-Players" : {
                        "title" : "Max-Players",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Maximum Server-Connected Players",
                        "default" : 16
                    },
                    "Tick-Rate" : {
                        "title" : "Tick-Rate",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Ingame Server-State Refresh Rate",
                        "default" : 64
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Base" : {
                "title" : "LinkedResource",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "default" : ""
                    },
                    "Type" : {
                        "title" : "Type",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Type"
                        } ],
                        "default" : {
                            "App" : {
                                "Web" : "https://google.com",
                                "External" : "",
                                "Schematic" : "{}"
                            },
                            "Web" : {
                                "Web" : "https://google.com",
                                "Schematic" : "{}"
                            },
                            "Reference" : "https://google.com"
                        }
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Response" : {
                "title" : "Response",
                "required" : [ "Mutation", "Status", "Message" ],
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string"
                    },
                    "Status" : {
                        "title" : "Status",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Schema" : {
                "title" : "LinkedResource-Schema",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "default" : ""
                    },
                    "Type" : {
                        "title" : "Type",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Type"
                        } ],
                        "default" : {
                            "App" : {
                                "Web" : "https://google.com",
                                "External" : "",
                                "Schematic" : "{}"
                            },
                            "Web" : {
                                "Web" : "https://google.com",
                                "Schematic" : "{}"
                            },
                            "Reference" : "https://google.com"
                        }
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Success" : {
                "title" : "Success",
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string",
                        "default" : "[Mutation]"
                    },
                    "Status-Code" : {
                        "title" : "Status-Code",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "description" : "...",
                        "default" : "Success"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Type" : {
                "title" : "Type",
                "type" : "object",
                "properties" : {
                    "Application" : {
                        "title" : "Application",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Application"
                        } ],
                        "default" : {
                            "Web" : "https://google.com",
                            "External" : "",
                            "Schematic" : "{}"
                        }
                    },
                    "WebHook" : {
                        "title" : "Webhook",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/WebHook"
                        } ],
                        "default" : {
                            "Web" : "https://google.com",
                            "Schematic" : "{}"
                        }
                    },
                    "Web-URL" : {
                        "title" : "Web-Url",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "format" : "uri",
                        "default" : "https://google.com"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__LinkedResource__Update" : {
                "title" : "LinkedResource-Update",
                "type" : "object",
                "properties" : {
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "default" : ""
                    },
                    "Type" : {
                        "title" : "Type",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__LinkedResource__Type"
                        } ],
                        "default" : {
                            "App" : {
                                "Web" : "https://google.com",
                                "External" : "",
                                "Schematic" : "{}"
                            },
                            "Web" : {
                                "Web" : "https://google.com",
                                "Schematic" : "{}"
                            },
                            "Reference" : "https://google.com"
                        }
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Base" : {
                "title" : "Task",
                "type" : "object",
                "properties" : {
                    "Associations" : {
                        "title" : "Associations",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Parent"
                        },
                        "description" : "Parent-Task Metadata",
                        "default" : [ ]
                    },
                    "Collection-Board" : {
                        "title" : "Collection-Board",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Board"
                        } ],
                        "description" : "Collection-Board Metadata",
                        "default" : {
                            "ID" : "",
                            "Title" : "",
                            "Canonical" : ""
                        }
                    },
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "description" : "Task Title",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Task",
                        "default" : ""
                    },
                    "Subscription" : {
                        "title" : "Subscription",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "HTTP(s) Subscription Endpoint",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Assignee" : {
                        "title" : "Assignee",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    },
                    "Confidential" : {
                        "title" : "Confidential",
                        "type" : "boolean",
                        "description" : "Confidential State of the Assigned Task",
                        "default" : false
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Task"
                        } ],
                        "description" : "The Type of Assigned Task",
                        "default" : ""
                    },
                    "Body" : {
                        "title" : "Body",
                        "maxLength" : 1000,
                        "type" : "string",
                        "description" : "Body Metadata of Assigned Task; [Character] <= 1000",
                        "default" : ""
                    },
                    "Target" : {
                        "title" : "Target",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Target"
                        } ],
                        "description" : "Target Schedules of Task",
                        "default" : {
                            "Scheduled" : "2021-07-03T20:06:46.749294",
                            "Completion" : "2021-07-03T20:06:46.749298",
                            "Due" : "2021-07-03T20:06:46.749299"
                        }
                    },
                    "Priority" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Priority"
                        } ],
                        "description" : "Task Priority",
                        "default" : ""
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Reminder" : {
                        "title" : "Reminder",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Status"
                        } ],
                        "description" : "The Current Status of the Task",
                        "default" : ""
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "description" : "Determines if Task is WIP",
                        "default" : false
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Periodicity" : {
                "title" : "Periodicity",
                "enum" : [ "Daily", "Weekly", "Monthly", "" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Taskboard__Schemas__Task__Response" : {
                "title" : "Response",
                "required" : [ "Mutation", "Status", "Message" ],
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string"
                    },
                    "Status" : {
                        "title" : "Status",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Schedule" : {
                "title" : "Schedule",
                "type" : "object",
                "properties" : {
                    "Frequency" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Periodicity"
                        } ],
                        "default" : ""
                    },
                    "Time" : {
                        "title" : "Time",
                        "type" : "array",
                        "items" : {
                            "type" : "string",
                            "format" : "date-time"
                        }
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Schema" : {
                "title" : "Task-Schema",
                "required" : [ "Assignee", "Author" ],
                "type" : "object",
                "properties" : {
                    "Associations" : {
                        "title" : "Associations",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Parent"
                        },
                        "description" : "Parent-Task Metadata",
                        "default" : [ ]
                    },
                    "Collection-Board" : {
                        "title" : "Collection-Board",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Board"
                        } ],
                        "description" : "Collection-Board Metadata",
                        "default" : {
                            "ID" : "",
                            "Title" : "",
                            "Canonical" : ""
                        }
                    },
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "description" : "Task Title",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Task",
                        "default" : ""
                    },
                    "Subscription" : {
                        "title" : "Subscription",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "HTTP(s) Subscription Endpoint",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Assignee" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                    },
                    "Confidential" : {
                        "title" : "Confidential",
                        "type" : "boolean",
                        "description" : "Confidential State of the Assigned Task",
                        "default" : false
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Task"
                        } ],
                        "description" : "The Type of Assigned Task",
                        "default" : ""
                    },
                    "Body" : {
                        "title" : "Body",
                        "maxLength" : 1000,
                        "type" : "string",
                        "description" : "Body Metadata of Assigned Task; [Character] <= 1000",
                        "default" : ""
                    },
                    "Target" : {
                        "title" : "Target",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Target"
                        } ],
                        "description" : "Target Schedules of Task",
                        "default" : {
                            "Scheduled" : "2021-07-03T20:06:46.749294",
                            "Completion" : "2021-07-03T20:06:46.749298",
                            "Due" : "2021-07-03T20:06:46.749299"
                        }
                    },
                    "Priority" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Priority"
                        } ],
                        "description" : "Task Priority",
                        "default" : ""
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Reminder" : {
                        "title" : "Reminder",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Status"
                        } ],
                        "description" : "The Current Status of the Task",
                        "default" : ""
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "description" : "Determines if Task is WIP",
                        "default" : false
                    },
                    "ID" : {
                        "title" : "Id",
                        "anyOf" : [ {
                            "type" : "string"
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    },
                    "Author" : {
                        "$ref" : "#/components/schemas/Database__User__Schemas__Nexus__Shard"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Status" : {
                "title" : "Status",
                "enum" : [ "Completed", "WIP", "Delayed", "Waiting", "Cancelled", "" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Mongo__Taskboard__Schemas__Task__Success" : {
                "title" : "Success",
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string",
                        "default" : "[Mutation]"
                    },
                    "Status-Code" : {
                        "title" : "Status-Code",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "description" : "...",
                        "default" : "Success"
                    }
                },
                "description" : "..."
            },
            "Mongo__Taskboard__Schemas__Task__Update" : {
                "title" : "Task-Update",
                "type" : "object",
                "properties" : {
                    "Associations" : {
                        "title" : "Associations",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Parent"
                        },
                        "description" : "Parent-Task Metadata",
                        "default" : [ ]
                    },
                    "Collection-Board" : {
                        "title" : "Collection-Board",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Board"
                        } ],
                        "description" : "Collection-Board Metadata",
                        "default" : {
                            "ID" : "",
                            "Title" : "",
                            "Canonical" : ""
                        }
                    },
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "description" : "Task Title",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Task",
                        "default" : ""
                    },
                    "Subscription" : {
                        "title" : "Subscription",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "HTTP(s) Subscription Endpoint",
                        "format" : "uri",
                        "default" : "https://gitlab.cloud-technology.io/"
                    },
                    "Assignee" : {
                        "title" : "Assignee",
                        "anyOf" : [ {
                            "type" : "string",
                            "format" : "uuid4"
                        }, {
                            "type" : "integer",
                            "exclusiveMinimum" : true
                        }, {
                            "type" : "string"
                        } ],
                        "default" : ""
                    },
                    "Confidential" : {
                        "title" : "Confidential",
                        "type" : "boolean",
                        "description" : "Confidential State of the Assigned Task",
                        "default" : false
                    },
                    "Type" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Task"
                        } ],
                        "description" : "The Type of Assigned Task",
                        "default" : ""
                    },
                    "Body" : {
                        "title" : "Body",
                        "maxLength" : 1000,
                        "type" : "string",
                        "description" : "Body Metadata of Assigned Task; [Character] <= 1000",
                        "default" : ""
                    },
                    "Target" : {
                        "title" : "Target",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Target"
                        } ],
                        "description" : "Target Schedules of Task",
                        "default" : {
                            "Scheduled" : "2021-07-03T20:06:46.749294",
                            "Completion" : "2021-07-03T20:06:46.749298",
                            "Due" : "2021-07-03T20:06:46.749299"
                        }
                    },
                    "Priority" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Priority"
                        } ],
                        "description" : "Task Priority",
                        "default" : ""
                    },
                    "Recurrence" : {
                        "title" : "Recurrence",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Reminder" : {
                        "title" : "Reminder",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Schedule"
                        }
                    },
                    "Status" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Mongo__Taskboard__Schemas__Task__Status"
                        } ],
                        "description" : "The Current Status of the Task",
                        "default" : ""
                    },
                    "Active" : {
                        "title" : "Active",
                        "type" : "boolean",
                        "description" : "Determines if Task is WIP",
                        "default" : false
                    },
                    "Modification" : {
                        "title" : "Modification",
                        "type" : "string",
                        "description" : "Document Last Modified Date",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Namespace" : {
                "title" : "Gitlab-Repository-Namespace",
                "required" : [ "id", "name", "path", "kind", "full_path", "web_url" ],
                "type" : "object",
                "properties" : {
                    "id" : {
                        "title" : "id",
                        "type" : "integer",
                        "description" : "id"
                    },
                    "name" : {
                        "title" : "name",
                        "type" : "string",
                        "description" : "name"
                    },
                    "path" : {
                        "title" : "path",
                        "type" : "string",
                        "description" : "path"
                    },
                    "kind" : {
                        "title" : "kind",
                        "type" : "string",
                        "description" : "kind"
                    },
                    "full_path" : {
                        "title" : "full_path",
                        "type" : "string",
                        "description" : "full_path"
                    },
                    "parent_id" : {
                        "title" : "parent_id",
                        "type" : "integer",
                        "description" : "parent_id"
                    },
                    "avatar_url" : {
                        "title" : "avatar_url",
                        "type" : "string",
                        "description" : "avatar_url"
                    },
                    "web_url" : {
                        "title" : "web_url",
                        "type" : "string",
                        "description" : "web_url"
                    }
                },
                "description" : "..."
            },
            "Owner" : {
                "title" : "Gitlab-Repository-Owner",
                "required" : [ "id", "name" ],
                "type" : "object",
                "properties" : {
                    "id" : {
                        "title" : "id",
                        "type" : "string",
                        "description" : "id"
                    },
                    "name" : {
                        "title" : "name",
                        "type" : "string",
                        "description" : "name"
                    },
                    "created_at" : {
                        "title" : "created_at",
                        "type" : "string",
                        "description" : "created_at"
                    }
                },
                "description" : "..."
            },
            "Parent" : {
                "title" : "Parent",
                "type" : "object",
                "properties" : {
                    "ID" : {
                        "title" : "Id",
                        "type" : "string",
                        "description" : "Parent-Task ID"
                    },
                    "Title" : {
                        "title" : "Title",
                        "type" : "string",
                        "description" : "Parent-Task Title",
                        "default" : ""
                    },
                    "Canonical" : {
                        "title" : "Canonical",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Parent-Task",
                        "default" : ""
                    }
                },
                "description" : "..."
            },
            "Permissions" : {
                "title" : "Gitlab-Repository-Permissions",
                "type" : "object",
                "properties" : {
                    "project_access" : {
                        "$ref" : "#/components/schemas/Access"
                    },
                    "group_access" : {
                        "$ref" : "#/components/schemas/Access"
                    }
                },
                "description" : "..."
            },
            "Port" : {
                "title" : "Port",
                "required" : [ "Name", "Value", "Protocol", "Description" ],
                "type" : "object",
                "properties" : {
                    "Name" : {
                        "title" : "Name",
                        "type" : "string",
                        "description" : "Canonical Human-Readable Title of Attributed Port"
                    },
                    "Value" : {
                        "title" : "Value",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "description" : "Network Assigned Port Value"
                    },
                    "Protocol" : {
                        "title" : "Protocol",
                        "type" : "string",
                        "description" : "UDP, TCP, UDP+TCP Enumeration Communication Protocol"
                    },
                    "Network-Type" : {
                        "title" : "Network-Type",
                        "type" : "string",
                        "description" : "XOR Port || Socket",
                        "default" : "Port"
                    },
                    "Description" : {
                        "title" : "Description",
                        "type" : "string",
                        "description" : "Server Port Functional Purpose + Description"
                    }
                },
                "description" : "..."
            },
            "Priority" : {
                "title" : "Priority",
                "enum" : [ "Severe", "High", "Standard", "Low", "Queue", "" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Project" : {
                "title" : "Gitlab-Repository-Project",
                "required" : [ "id", "created_at", "forks_count", "star_count", "default_branch", "ssh_url_to_repo", "http_url_to_repo", "web_url", "name", "name_with_namespace", "path", "path_with_namespace", "namespace" ],
                "type" : "object",
                "properties" : {
                    "id" : {
                        "title" : "id",
                        "type" : "integer",
                        "description" : "id"
                    },
                    "created_at" : {
                        "title" : "created_at",
                        "type" : "string",
                        "description" : "created_at",
                        "format" : "date-time"
                    },
                    "forks_count" : {
                        "title" : "forks_count",
                        "type" : "integer",
                        "description" : "forks_count"
                    },
                    "star_count" : {
                        "title" : "star_count",
                        "type" : "integer",
                        "description" : "star_count"
                    },
                    "description" : {
                        "title" : "description",
                        "type" : "string",
                        "description" : "description"
                    },
                    "default_branch" : {
                        "title" : "default_branch",
                        "type" : "string",
                        "description" : "default_branch"
                    },
                    "visibility" : {
                        "title" : "visibility",
                        "type" : "string",
                        "description" : "visibility"
                    },
                    "ssh_url_to_repo" : {
                        "title" : "ssh_url_to_repo",
                        "type" : "string",
                        "description" : "ssh_url_to_repo"
                    },
                    "http_url_to_repo" : {
                        "title" : "http_url_to_repo",
                        "type" : "string",
                        "description" : "http_url_to_repo"
                    },
                    "web_url" : {
                        "title" : "web_url",
                        "type" : "string",
                        "description" : "web_url"
                    },
                    "readme_url" : {
                        "title" : "readme_url",
                        "type" : "string",
                        "description" : "readme_url"
                    },
                    "tag_list" : {
                        "title" : "tag_list",
                        "type" : "array",
                        "items" : { },
                        "description" : "tag_list"
                    },
                    "owner" : {
                        "title" : "owner",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Owner"
                        } ],
                        "description" : "owner"
                    },
                    "name" : {
                        "title" : "name",
                        "type" : "string",
                        "description" : "name"
                    },
                    "name_with_namespace" : {
                        "title" : "name_with_namespace",
                        "type" : "string",
                        "description" : "name_with_namespace"
                    },
                    "path" : {
                        "title" : "path",
                        "type" : "string",
                        "description" : "path"
                    },
                    "path_with_namespace" : {
                        "title" : "path_with_namespace",
                        "type" : "string",
                        "description" : "path_with_namespace"
                    },
                    "issues_enabled" : {
                        "title" : "issues_enabled",
                        "type" : "boolean",
                        "description" : "issues_enabled"
                    },
                    "open_issues_count" : {
                        "title" : "open_issues_count",
                        "type" : "integer",
                        "description" : "open_issues_count"
                    },
                    "merge_requests_enabled" : {
                        "title" : "merge_requests_enabled",
                        "type" : "boolean",
                        "description" : "merge_requests_enabled"
                    },
                    "jobs_enabled" : {
                        "title" : "jobs_enabled",
                        "type" : "boolean",
                        "description" : "jobs_enabled"
                    },
                    "wiki_enabled" : {
                        "title" : "wiki_enabled",
                        "type" : "boolean",
                        "description" : "wiki_enabled"
                    },
                    "snippets_enabled" : {
                        "title" : "snippets_enabled",
                        "type" : "boolean",
                        "description" : "snippets_enabled"
                    },
                    "can_create_merge_request_in" : {
                        "title" : "can_create_merge_request_in",
                        "type" : "boolean",
                        "description" : "can_create_merge_request_in"
                    },
                    "resolve_outdated_diff_discussions" : {
                        "title" : "resolve_outdated_diff_discussions",
                        "type" : "boolean",
                        "description" : "resolve_outdated_diff_discussions"
                    },
                    "container_registry_enabled" : {
                        "title" : "container_registry_enabled",
                        "type" : "boolean",
                        "description" : "container_registry_enabled"
                    },
                    "last_activity_at" : {
                        "title" : "last_activity_at",
                        "type" : "string",
                        "description" : "last_activity_at",
                        "format" : "date-time"
                    },
                    "creator_id" : {
                        "title" : "creator_id",
                        "type" : "integer",
                        "description" : "creator_id"
                    },
                    "namespace" : {
                        "title" : "namespace",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Namespace"
                        } ],
                        "description" : "namespace"
                    },
                    "import_status" : {
                        "title" : "import_status",
                        "type" : "string",
                        "description" : "import_status"
                    },
                    "import_error" : {
                        "title" : "import_error",
                        "type" : "string",
                        "description" : "import_error"
                    },
                    "permissions" : {
                        "title" : "permissions",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Permissions"
                        } ],
                        "description" : "permissions"
                    },
                    "archived" : {
                        "title" : "archived",
                        "type" : "boolean",
                        "description" : "archived"
                    },
                    "avatar_url" : {
                        "title" : "avatar_url",
                        "type" : "string",
                        "description" : "avatar_url"
                    },
                    "shared_runners_enabled" : {
                        "title" : "shared_runners_enabled",
                        "type" : "integer",
                        "description" : "shared_runners_enabled"
                    },
                    "runners_token" : {
                        "title" : "runners_token",
                        "type" : "string",
                        "description" : "runners_token"
                    },
                    "ci_default_git_depth" : {
                        "title" : "ci_default_git_depth",
                        "type" : "integer",
                        "description" : "ci_default_git_depth"
                    },
                    "ci_forward_deployment_enabled" : {
                        "title" : "ci_forward_deployment_enabled",
                        "type" : "boolean",
                        "description" : "ci_forward_deployment_enabled"
                    },
                    "public_jobs" : {
                        "title" : "public_jobs",
                        "type" : "boolean",
                        "description" : "public_jobs"
                    },
                    "shared_with_groups" : {
                        "title" : "shared_with_groups",
                        "type" : "array",
                        "items" : { },
                        "description" : "shared_with_groups"
                    },
                    "only_allow_merge_if_pipeline_succeeds" : {
                        "title" : "only_allow_merge_if_pipeline_succeeds",
                        "type" : "boolean",
                        "description" : "only_allow_merge_if_pipeline_succeeds"
                    },
                    "allow_merge_on_skipped_pipeline" : {
                        "title" : "allow_merge_on_skipped_pipeline",
                        "type" : "boolean",
                        "description" : "allow_merge_on_skipped_pipeline"
                    },
                    "restrict_user_defined_variables" : {
                        "title" : "restrict_user_defined_variables",
                        "type" : "boolean",
                        "description" : "restrict_user_defined_variables"
                    },
                    "only_allow_merge_if_all_discussions_are_resolved" : {
                        "title" : "only_allow_merge_if_all_discussions_are_resolved",
                        "type" : "boolean",
                        "description" : "only_allow_merge_if_all_discussions_are_resolved"
                    },
                    "remove_source_branch_after_merge" : {
                        "title" : "remove_source_branch_after_merge",
                        "type" : "boolean",
                        "description" : "remove_source_branch_after_merge"
                    },
                    "request_access_enabled" : {
                        "title" : "request_access_enabled",
                        "type" : "boolean",
                        "description" : "request_access_enabled"
                    },
                    "merge_method" : {
                        "title" : "merge_method",
                        "type" : "string",
                        "description" : "merge_method"
                    },
                    "auto_devops_enabled" : {
                        "title" : "auto_devops_enabled",
                        "type" : "boolean",
                        "description" : "auto_devops_enabled"
                    },
                    "auto_devops_deploy_strategy" : {
                        "title" : "auto_devops_deploy_strategy",
                        "type" : "string",
                        "description" : "auto_devops_deploy_strategy"
                    },
                    "repository_storage" : {
                        "title" : "repository_storage",
                        "type" : "string",
                        "description" : "repository_storage"
                    },
                    "approvals_before_merge" : {
                        "title" : "approvals_before_merge",
                        "type" : "integer",
                        "description" : "approvals_before_merge"
                    },
                    "mirror" : {
                        "title" : "mirror",
                        "type" : "boolean",
                        "description" : "mirror"
                    },
                    "mirror_user_id" : {
                        "title" : "mirror_user_id",
                        "type" : "integer",
                        "description" : "mirror_user_id"
                    },
                    "mirror_trigger_builds" : {
                        "title" : "mirror_trigger_builds",
                        "type" : "boolean",
                        "description" : "mirror_trigger_builds"
                    },
                    "only_mirror_protected_branches" : {
                        "title" : "only_mirror_protected_branches",
                        "type" : "boolean",
                        "description" : "only_mirror_protected_branches"
                    },
                    "mirror_overwrites_diverged_branches" : {
                        "title" : "mirror_overwrites_diverged_branches",
                        "type" : "boolean",
                        "description" : "mirror_overwrites_diverged_branches"
                    },
                    "external_authorization_classification_label" : {
                        "title" : "external_authorization_classification_label",
                        "type" : "string",
                        "description" : "external_authorization_classification_label"
                    },
                    "packages_enabled" : {
                        "title" : "packages_enabled",
                        "type" : "boolean",
                        "description" : "packages_enabled"
                    },
                    "service_desk_enabled" : {
                        "title" : "service_desk_enabled",
                        "type" : "boolean",
                        "description" : "service_desk_enabled"
                    },
                    "service_desk_address" : {
                        "title" : "service_desk_address",
                        "type" : "string",
                        "description" : "service_desk_address"
                    },
                    "autoclose_referenced_issues" : {
                        "title" : "autoclose_referenced_issues",
                        "type" : "boolean",
                        "description" : "autoclose_referenced_issues"
                    },
                    "suggestion_commit_message" : {
                        "title" : "suggestion_commit_message",
                        "type" : "string",
                        "description" : "suggestion_commit_message"
                    },
                    "statistics" : {
                        "title" : "statistics",
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Statistics"
                        } ],
                        "description" : "statistics"
                    },
                    "container_registry_image_prefix" : {
                        "title" : "container_registry_image_prefix",
                        "type" : "string",
                        "description" : "container_registry_image_prefix"
                    }
                },
                "description" : "[...]"
            },
            "Record" : {
                "title" : "Company-Record",
                "type" : "object",
                "properties" : {
                    "Company-Name" : {
                        "title" : "Company-Name",
                        "type" : "string",
                        "default" : "Cloud-Technology LLC."
                    },
                    "Industry" : {
                        "allOf" : [ {
                            "$ref" : "#/components/schemas/Industry"
                        } ],
                        "default" : "IT"
                    },
                    "Website" : {
                        "title" : "Website",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "format" : "uri",
                        "default" : "https://code.cloud-technology.io/"
                    },
                    "Unit" : {
                        "title" : "Unit",
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/components/schemas/Database__Business__Schemas__Unit__Base"
                        }
                    }
                },
                "description" : "..."
            },
            "Size" : {
                "title" : "Upload-Image-Image-Size",
                "required" : [ "Bytes", "KB", "MB", "GB" ],
                "type" : "object",
                "properties" : {
                    "Bytes" : {
                        "title" : "Bytes",
                        "type" : "number"
                    },
                    "KB" : {
                        "title" : "Kb",
                        "type" : "number"
                    },
                    "MB" : {
                        "title" : "Mb",
                        "type" : "number"
                    },
                    "GB" : {
                        "title" : "Gb",
                        "type" : "number"
                    }
                },
                "description" : "..."
            },
            "Statistics" : {
                "title" : "Gitlab-Repository-Statistics",
                "type" : "object",
                "properties" : {
                    "Total-Commits" : {
                        "title" : "commit_count",
                        "type" : "integer",
                        "default" : 0
                    },
                    "Storage-Size" : {
                        "title" : "storage_size",
                        "type" : "integer",
                        "default" : 0
                    },
                    "Programming-Language" : {
                        "title" : "wiki_size",
                        "type" : "integer",
                        "default" : 0
                    },
                    "LFS-Objects-Size" : {
                        "title" : "lfs_objects_size",
                        "type" : "integer",
                        "default" : 0
                    },
                    "Artifacts-Size" : {
                        "title" : "job_artifacts_size",
                        "type" : "integer",
                        "default" : 0
                    },
                    "Packages-Size" : {
                        "title" : "packages_size",
                        "type" : "integer",
                        "default" : 0
                    },
                    "Snippets-Size" : {
                        "title" : "snippets_size",
                        "type" : "integer",
                        "default" : 0
                    }
                },
                "description" : "..."
            },
            "Target" : {
                "title" : "Target",
                "type" : "object",
                "properties" : {
                    "Scheduled-Date" : {
                        "title" : "Scheduled-Date",
                        "type" : "string",
                        "description" : "Task Scheduled Date",
                        "format" : "date-time"
                    },
                    "Completion-Date" : {
                        "title" : "Completion-Date",
                        "type" : "string",
                        "description" : "Task Completion Date",
                        "format" : "date-time"
                    },
                    "Due-Date" : {
                        "title" : "Due-Date",
                        "type" : "string",
                        "description" : "Task Due Date",
                        "format" : "date-time"
                    }
                },
                "description" : "..."
            },
            "Task" : {
                "title" : "Task",
                "enum" : [ "Issue", "Story", "Epic", "Reference", "Spike", "" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "Updates" : {
                "title" : "Updates",
                "enum" : [ "All", "External", "None" ],
                "type" : "string",
                "description" : "An enumeration."
            },
            "ValidationError" : {
                "title" : "ValidationError",
                "required" : [ "loc", "msg", "type" ],
                "type" : "object",
                "properties" : {
                    "loc" : {
                        "title" : "Location",
                        "type" : "array",
                        "items" : {
                            "type" : "string"
                        }
                    },
                    "msg" : {
                        "title" : "Message",
                        "type" : "string"
                    },
                    "type" : {
                        "title" : "Error Type",
                        "type" : "string"
                    }
                }
            },
            "WebHook" : {
                "title" : "WebHook",
                "type" : "object",
                "properties" : {
                    "Web-URL" : {
                        "title" : "Web-Url",
                        "maxLength" : 65536,
                        "minLength" : 1,
                        "type" : "string",
                        "format" : "uri",
                        "default" : "https://google.com"
                    },
                    "Schematic" : {
                        "title" : "Schematic",
                        "type" : "string",
                        "format" : "json-string",
                        "default" : "{}"
                    }
                },
                "description" : "..."
            },
            "pydantic__dataclasses__Response" : {
                "title" : "Response",
                "required" : [ "Mutation", "Status", "Message" ],
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string"
                    },
                    "Status" : {
                        "title" : "Status",
                        "exclusiveMinimum" : true,
                        "type" : "integer"
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string"
                    }
                }
            },
            "pydantic__dataclasses__Success" : {
                "title" : "Success",
                "type" : "object",
                "properties" : {
                    "Mutation" : {
                        "title" : "Mutation",
                        "type" : "string",
                        "default" : "N/A"
                    },
                    "Status-Code" : {
                        "title" : "Status-Code",
                        "exclusiveMinimum" : true,
                        "type" : "integer",
                        "default" : 200
                    },
                    "Message" : {
                        "title" : "Message",
                        "type" : "string",
                        "description" : "...",
                        "default" : "Success"
                    }
                }
            }
        },
        "securitySchemes" : {
            "OAuth2PasswordBearer" : {
                "type" : "oauth2",
                "flows" : {
                    "password" : {
                        "scopes" : { },
                        "tokenUrl" : "/API/Authentication/Token"
                    }
                }
            }
        }
    }
}